/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the TaggingsResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaggingsResponseBody{}

// TaggingsResponseBody struct for TaggingsResponseBody
type TaggingsResponseBody struct {
	Pagination *PaginationResponse `json:"pagination,omitempty"`
	Taggings []TaggingResponse `json:"taggings,omitempty"`
}

// NewTaggingsResponseBody instantiates a new TaggingsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaggingsResponseBody() *TaggingsResponseBody {
	this := TaggingsResponseBody{}
	return &this
}

// NewTaggingsResponseBodyWithDefaults instantiates a new TaggingsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaggingsResponseBodyWithDefaults() *TaggingsResponseBody {
	this := TaggingsResponseBody{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *TaggingsResponseBody) GetPagination() PaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaggingsResponseBody) GetPaginationOk() (*PaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *TaggingsResponseBody) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationResponse and assigns it to the Pagination field.
func (o *TaggingsResponseBody) SetPagination(v PaginationResponse) {
	o.Pagination = &v
}

// GetTaggings returns the Taggings field value if set, zero value otherwise.
func (o *TaggingsResponseBody) GetTaggings() []TaggingResponse {
	if o == nil || IsNil(o.Taggings) {
		var ret []TaggingResponse
		return ret
	}
	return o.Taggings
}

// GetTaggingsOk returns a tuple with the Taggings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaggingsResponseBody) GetTaggingsOk() ([]TaggingResponse, bool) {
	if o == nil || IsNil(o.Taggings) {
		return nil, false
	}
	return o.Taggings, true
}

// HasTaggings returns a boolean if a field has been set.
func (o *TaggingsResponseBody) HasTaggings() bool {
	if o != nil && !IsNil(o.Taggings) {
		return true
	}

	return false
}

// SetTaggings gets a reference to the given []TaggingResponse and assigns it to the Taggings field.
func (o *TaggingsResponseBody) SetTaggings(v []TaggingResponse) {
	o.Taggings = v
}

func (o TaggingsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaggingsResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Taggings) {
		toSerialize["taggings"] = o.Taggings
	}
	return toSerialize, nil
}

type NullableTaggingsResponseBody struct {
	value *TaggingsResponseBody
	isSet bool
}

func (v NullableTaggingsResponseBody) Get() *TaggingsResponseBody {
	return v.value
}

func (v *NullableTaggingsResponseBody) Set(val *TaggingsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTaggingsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTaggingsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaggingsResponseBody(val *TaggingsResponseBody) *NullableTaggingsResponseBody {
	return &NullableTaggingsResponseBody{value: val, isSet: true}
}

func (v NullableTaggingsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaggingsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


