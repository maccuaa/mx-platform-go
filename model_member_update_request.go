/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the MemberUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberUpdateRequest{}

// MemberUpdateRequest struct for MemberUpdateRequest
type MemberUpdateRequest struct {
	BackgroundAggregationIsDisabled *bool `json:"background_aggregation_is_disabled,omitempty"`
	Credentials []CredentialRequest `json:"credentials,omitempty"`
	Id *string `json:"id,omitempty"`
	Metadata *string `json:"metadata,omitempty"`
	SkipAggregation *bool `json:"skip_aggregation,omitempty"`
}

// NewMemberUpdateRequest instantiates a new MemberUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberUpdateRequest() *MemberUpdateRequest {
	this := MemberUpdateRequest{}
	return &this
}

// NewMemberUpdateRequestWithDefaults instantiates a new MemberUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberUpdateRequestWithDefaults() *MemberUpdateRequest {
	this := MemberUpdateRequest{}
	return &this
}

// GetBackgroundAggregationIsDisabled returns the BackgroundAggregationIsDisabled field value if set, zero value otherwise.
func (o *MemberUpdateRequest) GetBackgroundAggregationIsDisabled() bool {
	if o == nil || IsNil(o.BackgroundAggregationIsDisabled) {
		var ret bool
		return ret
	}
	return *o.BackgroundAggregationIsDisabled
}

// GetBackgroundAggregationIsDisabledOk returns a tuple with the BackgroundAggregationIsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberUpdateRequest) GetBackgroundAggregationIsDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.BackgroundAggregationIsDisabled) {
		return nil, false
	}
	return o.BackgroundAggregationIsDisabled, true
}

// HasBackgroundAggregationIsDisabled returns a boolean if a field has been set.
func (o *MemberUpdateRequest) HasBackgroundAggregationIsDisabled() bool {
	if o != nil && !IsNil(o.BackgroundAggregationIsDisabled) {
		return true
	}

	return false
}

// SetBackgroundAggregationIsDisabled gets a reference to the given bool and assigns it to the BackgroundAggregationIsDisabled field.
func (o *MemberUpdateRequest) SetBackgroundAggregationIsDisabled(v bool) {
	o.BackgroundAggregationIsDisabled = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *MemberUpdateRequest) GetCredentials() []CredentialRequest {
	if o == nil || IsNil(o.Credentials) {
		var ret []CredentialRequest
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberUpdateRequest) GetCredentialsOk() ([]CredentialRequest, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *MemberUpdateRequest) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given []CredentialRequest and assigns it to the Credentials field.
func (o *MemberUpdateRequest) SetCredentials(v []CredentialRequest) {
	o.Credentials = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MemberUpdateRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MemberUpdateRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MemberUpdateRequest) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *MemberUpdateRequest) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberUpdateRequest) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MemberUpdateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *MemberUpdateRequest) SetMetadata(v string) {
	o.Metadata = &v
}

// GetSkipAggregation returns the SkipAggregation field value if set, zero value otherwise.
func (o *MemberUpdateRequest) GetSkipAggregation() bool {
	if o == nil || IsNil(o.SkipAggregation) {
		var ret bool
		return ret
	}
	return *o.SkipAggregation
}

// GetSkipAggregationOk returns a tuple with the SkipAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberUpdateRequest) GetSkipAggregationOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipAggregation) {
		return nil, false
	}
	return o.SkipAggregation, true
}

// HasSkipAggregation returns a boolean if a field has been set.
func (o *MemberUpdateRequest) HasSkipAggregation() bool {
	if o != nil && !IsNil(o.SkipAggregation) {
		return true
	}

	return false
}

// SetSkipAggregation gets a reference to the given bool and assigns it to the SkipAggregation field.
func (o *MemberUpdateRequest) SetSkipAggregation(v bool) {
	o.SkipAggregation = &v
}

func (o MemberUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackgroundAggregationIsDisabled) {
		toSerialize["background_aggregation_is_disabled"] = o.BackgroundAggregationIsDisabled
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.SkipAggregation) {
		toSerialize["skip_aggregation"] = o.SkipAggregation
	}
	return toSerialize, nil
}

type NullableMemberUpdateRequest struct {
	value *MemberUpdateRequest
	isSet bool
}

func (v NullableMemberUpdateRequest) Get() *MemberUpdateRequest {
	return v.value
}

func (v *NullableMemberUpdateRequest) Set(val *MemberUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberUpdateRequest(val *MemberUpdateRequest) *NullableMemberUpdateRequest {
	return &NullableMemberUpdateRequest{value: val, isSet: true}
}

func (v NullableMemberUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


