/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the EnhanceTransactionsResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnhanceTransactionsResponseBody{}

// EnhanceTransactionsResponseBody struct for EnhanceTransactionsResponseBody
type EnhanceTransactionsResponseBody struct {
	Transactions []EnhanceTransactionResponse `json:"transactions,omitempty"`
}

// NewEnhanceTransactionsResponseBody instantiates a new EnhanceTransactionsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnhanceTransactionsResponseBody() *EnhanceTransactionsResponseBody {
	this := EnhanceTransactionsResponseBody{}
	return &this
}

// NewEnhanceTransactionsResponseBodyWithDefaults instantiates a new EnhanceTransactionsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnhanceTransactionsResponseBodyWithDefaults() *EnhanceTransactionsResponseBody {
	this := EnhanceTransactionsResponseBody{}
	return &this
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *EnhanceTransactionsResponseBody) GetTransactions() []EnhanceTransactionResponse {
	if o == nil || IsNil(o.Transactions) {
		var ret []EnhanceTransactionResponse
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhanceTransactionsResponseBody) GetTransactionsOk() ([]EnhanceTransactionResponse, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *EnhanceTransactionsResponseBody) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []EnhanceTransactionResponse and assigns it to the Transactions field.
func (o *EnhanceTransactionsResponseBody) SetTransactions(v []EnhanceTransactionResponse) {
	o.Transactions = v
}

func (o EnhanceTransactionsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnhanceTransactionsResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	return toSerialize, nil
}

type NullableEnhanceTransactionsResponseBody struct {
	value *EnhanceTransactionsResponseBody
	isSet bool
}

func (v NullableEnhanceTransactionsResponseBody) Get() *EnhanceTransactionsResponseBody {
	return v.value
}

func (v *NullableEnhanceTransactionsResponseBody) Set(val *EnhanceTransactionsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableEnhanceTransactionsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableEnhanceTransactionsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnhanceTransactionsResponseBody(val *EnhanceTransactionsResponseBody) *NullableEnhanceTransactionsResponseBody {
	return &NullableEnhanceTransactionsResponseBody{value: val, isSet: true}
}

func (v NullableEnhanceTransactionsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnhanceTransactionsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


