/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the EnhanceTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnhanceTransactionResponse{}

// EnhanceTransactionResponse struct for EnhanceTransactionResponse
type EnhanceTransactionResponse struct {
	Amount NullableFloat32 `json:"amount,omitempty"`
	CategorizedBy NullableInt32 `json:"categorized_by,omitempty"`
	Category NullableString `json:"category,omitempty"`
	CategoryGuid NullableString `json:"category_guid,omitempty"`
	DescribedBy NullableInt32 `json:"described_by,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ExtendedTransactionType NullableString `json:"extended_transaction_type,omitempty"`
	Id NullableString `json:"id,omitempty"`
	IsBillPay NullableBool `json:"is_bill_pay,omitempty"`
	IsDirectDeposit NullableBool `json:"is_direct_deposit,omitempty"`
	IsExpense NullableBool `json:"is_expense,omitempty"`
	IsFee NullableBool `json:"is_fee,omitempty"`
	IsIncome NullableBool `json:"is_income,omitempty"`
	IsInternational NullableBool `json:"is_international,omitempty"`
	IsOverdraftFee NullableBool `json:"is_overdraft_fee,omitempty"`
	IsPayrollAdvance NullableBool `json:"is_payroll_advance,omitempty"`
	IsSubscription NullableBool `json:"is_subscription,omitempty"`
	Memo NullableString `json:"memo,omitempty"`
	MerchantCategoryCode NullableInt32 `json:"merchant_category_code,omitempty"`
	MerchantGuid NullableString `json:"merchant_guid,omitempty"`
	MerchantLocationGuid NullableString `json:"merchant_location_guid,omitempty"`
	OriginalDescription NullableString `json:"original_description,omitempty"`
	Type NullableString `json:"type,omitempty"`
}

// NewEnhanceTransactionResponse instantiates a new EnhanceTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnhanceTransactionResponse() *EnhanceTransactionResponse {
	this := EnhanceTransactionResponse{}
	return &this
}

// NewEnhanceTransactionResponseWithDefaults instantiates a new EnhanceTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnhanceTransactionResponseWithDefaults() *EnhanceTransactionResponse {
	this := EnhanceTransactionResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetAmount() float32 {
	if o == nil || IsNil(o.Amount.Get()) {
		var ret float32
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableFloat32 and assigns it to the Amount field.
func (o *EnhanceTransactionResponse) SetAmount(v float32) {
	o.Amount.Set(&v)
}
// SetAmountNil sets the value for Amount to be an explicit nil
func (o *EnhanceTransactionResponse) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetAmount() {
	o.Amount.Unset()
}

// GetCategorizedBy returns the CategorizedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetCategorizedBy() int32 {
	if o == nil || IsNil(o.CategorizedBy.Get()) {
		var ret int32
		return ret
	}
	return *o.CategorizedBy.Get()
}

// GetCategorizedByOk returns a tuple with the CategorizedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetCategorizedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategorizedBy.Get(), o.CategorizedBy.IsSet()
}

// HasCategorizedBy returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasCategorizedBy() bool {
	if o != nil && o.CategorizedBy.IsSet() {
		return true
	}

	return false
}

// SetCategorizedBy gets a reference to the given NullableInt32 and assigns it to the CategorizedBy field.
func (o *EnhanceTransactionResponse) SetCategorizedBy(v int32) {
	o.CategorizedBy.Set(&v)
}
// SetCategorizedByNil sets the value for CategorizedBy to be an explicit nil
func (o *EnhanceTransactionResponse) SetCategorizedByNil() {
	o.CategorizedBy.Set(nil)
}

// UnsetCategorizedBy ensures that no value is present for CategorizedBy, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetCategorizedBy() {
	o.CategorizedBy.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetCategory() string {
	if o == nil || IsNil(o.Category.Get()) {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *EnhanceTransactionResponse) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *EnhanceTransactionResponse) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetCategory() {
	o.Category.Unset()
}

// GetCategoryGuid returns the CategoryGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetCategoryGuid() string {
	if o == nil || IsNil(o.CategoryGuid.Get()) {
		var ret string
		return ret
	}
	return *o.CategoryGuid.Get()
}

// GetCategoryGuidOk returns a tuple with the CategoryGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetCategoryGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryGuid.Get(), o.CategoryGuid.IsSet()
}

// HasCategoryGuid returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasCategoryGuid() bool {
	if o != nil && o.CategoryGuid.IsSet() {
		return true
	}

	return false
}

// SetCategoryGuid gets a reference to the given NullableString and assigns it to the CategoryGuid field.
func (o *EnhanceTransactionResponse) SetCategoryGuid(v string) {
	o.CategoryGuid.Set(&v)
}
// SetCategoryGuidNil sets the value for CategoryGuid to be an explicit nil
func (o *EnhanceTransactionResponse) SetCategoryGuidNil() {
	o.CategoryGuid.Set(nil)
}

// UnsetCategoryGuid ensures that no value is present for CategoryGuid, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetCategoryGuid() {
	o.CategoryGuid.Unset()
}

// GetDescribedBy returns the DescribedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetDescribedBy() int32 {
	if o == nil || IsNil(o.DescribedBy.Get()) {
		var ret int32
		return ret
	}
	return *o.DescribedBy.Get()
}

// GetDescribedByOk returns a tuple with the DescribedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetDescribedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DescribedBy.Get(), o.DescribedBy.IsSet()
}

// HasDescribedBy returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasDescribedBy() bool {
	if o != nil && o.DescribedBy.IsSet() {
		return true
	}

	return false
}

// SetDescribedBy gets a reference to the given NullableInt32 and assigns it to the DescribedBy field.
func (o *EnhanceTransactionResponse) SetDescribedBy(v int32) {
	o.DescribedBy.Set(&v)
}
// SetDescribedByNil sets the value for DescribedBy to be an explicit nil
func (o *EnhanceTransactionResponse) SetDescribedByNil() {
	o.DescribedBy.Set(nil)
}

// UnsetDescribedBy ensures that no value is present for DescribedBy, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetDescribedBy() {
	o.DescribedBy.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EnhanceTransactionResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EnhanceTransactionResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetExtendedTransactionType returns the ExtendedTransactionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetExtendedTransactionType() string {
	if o == nil || IsNil(o.ExtendedTransactionType.Get()) {
		var ret string
		return ret
	}
	return *o.ExtendedTransactionType.Get()
}

// GetExtendedTransactionTypeOk returns a tuple with the ExtendedTransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetExtendedTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtendedTransactionType.Get(), o.ExtendedTransactionType.IsSet()
}

// HasExtendedTransactionType returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasExtendedTransactionType() bool {
	if o != nil && o.ExtendedTransactionType.IsSet() {
		return true
	}

	return false
}

// SetExtendedTransactionType gets a reference to the given NullableString and assigns it to the ExtendedTransactionType field.
func (o *EnhanceTransactionResponse) SetExtendedTransactionType(v string) {
	o.ExtendedTransactionType.Set(&v)
}
// SetExtendedTransactionTypeNil sets the value for ExtendedTransactionType to be an explicit nil
func (o *EnhanceTransactionResponse) SetExtendedTransactionTypeNil() {
	o.ExtendedTransactionType.Set(nil)
}

// UnsetExtendedTransactionType ensures that no value is present for ExtendedTransactionType, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetExtendedTransactionType() {
	o.ExtendedTransactionType.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *EnhanceTransactionResponse) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *EnhanceTransactionResponse) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetId() {
	o.Id.Unset()
}

// GetIsBillPay returns the IsBillPay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsBillPay() bool {
	if o == nil || IsNil(o.IsBillPay.Get()) {
		var ret bool
		return ret
	}
	return *o.IsBillPay.Get()
}

// GetIsBillPayOk returns a tuple with the IsBillPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsBillPayOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsBillPay.Get(), o.IsBillPay.IsSet()
}

// HasIsBillPay returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsBillPay() bool {
	if o != nil && o.IsBillPay.IsSet() {
		return true
	}

	return false
}

// SetIsBillPay gets a reference to the given NullableBool and assigns it to the IsBillPay field.
func (o *EnhanceTransactionResponse) SetIsBillPay(v bool) {
	o.IsBillPay.Set(&v)
}
// SetIsBillPayNil sets the value for IsBillPay to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsBillPayNil() {
	o.IsBillPay.Set(nil)
}

// UnsetIsBillPay ensures that no value is present for IsBillPay, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsBillPay() {
	o.IsBillPay.Unset()
}

// GetIsDirectDeposit returns the IsDirectDeposit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsDirectDeposit() bool {
	if o == nil || IsNil(o.IsDirectDeposit.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDirectDeposit.Get()
}

// GetIsDirectDepositOk returns a tuple with the IsDirectDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsDirectDepositOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDirectDeposit.Get(), o.IsDirectDeposit.IsSet()
}

// HasIsDirectDeposit returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsDirectDeposit() bool {
	if o != nil && o.IsDirectDeposit.IsSet() {
		return true
	}

	return false
}

// SetIsDirectDeposit gets a reference to the given NullableBool and assigns it to the IsDirectDeposit field.
func (o *EnhanceTransactionResponse) SetIsDirectDeposit(v bool) {
	o.IsDirectDeposit.Set(&v)
}
// SetIsDirectDepositNil sets the value for IsDirectDeposit to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsDirectDepositNil() {
	o.IsDirectDeposit.Set(nil)
}

// UnsetIsDirectDeposit ensures that no value is present for IsDirectDeposit, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsDirectDeposit() {
	o.IsDirectDeposit.Unset()
}

// GetIsExpense returns the IsExpense field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsExpense() bool {
	if o == nil || IsNil(o.IsExpense.Get()) {
		var ret bool
		return ret
	}
	return *o.IsExpense.Get()
}

// GetIsExpenseOk returns a tuple with the IsExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsExpenseOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsExpense.Get(), o.IsExpense.IsSet()
}

// HasIsExpense returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsExpense() bool {
	if o != nil && o.IsExpense.IsSet() {
		return true
	}

	return false
}

// SetIsExpense gets a reference to the given NullableBool and assigns it to the IsExpense field.
func (o *EnhanceTransactionResponse) SetIsExpense(v bool) {
	o.IsExpense.Set(&v)
}
// SetIsExpenseNil sets the value for IsExpense to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsExpenseNil() {
	o.IsExpense.Set(nil)
}

// UnsetIsExpense ensures that no value is present for IsExpense, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsExpense() {
	o.IsExpense.Unset()
}

// GetIsFee returns the IsFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsFee() bool {
	if o == nil || IsNil(o.IsFee.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFee.Get()
}

// GetIsFeeOk returns a tuple with the IsFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsFeeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFee.Get(), o.IsFee.IsSet()
}

// HasIsFee returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsFee() bool {
	if o != nil && o.IsFee.IsSet() {
		return true
	}

	return false
}

// SetIsFee gets a reference to the given NullableBool and assigns it to the IsFee field.
func (o *EnhanceTransactionResponse) SetIsFee(v bool) {
	o.IsFee.Set(&v)
}
// SetIsFeeNil sets the value for IsFee to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsFeeNil() {
	o.IsFee.Set(nil)
}

// UnsetIsFee ensures that no value is present for IsFee, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsFee() {
	o.IsFee.Unset()
}

// GetIsIncome returns the IsIncome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsIncome() bool {
	if o == nil || IsNil(o.IsIncome.Get()) {
		var ret bool
		return ret
	}
	return *o.IsIncome.Get()
}

// GetIsIncomeOk returns a tuple with the IsIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsIncomeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsIncome.Get(), o.IsIncome.IsSet()
}

// HasIsIncome returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsIncome() bool {
	if o != nil && o.IsIncome.IsSet() {
		return true
	}

	return false
}

// SetIsIncome gets a reference to the given NullableBool and assigns it to the IsIncome field.
func (o *EnhanceTransactionResponse) SetIsIncome(v bool) {
	o.IsIncome.Set(&v)
}
// SetIsIncomeNil sets the value for IsIncome to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsIncomeNil() {
	o.IsIncome.Set(nil)
}

// UnsetIsIncome ensures that no value is present for IsIncome, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsIncome() {
	o.IsIncome.Unset()
}

// GetIsInternational returns the IsInternational field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsInternational() bool {
	if o == nil || IsNil(o.IsInternational.Get()) {
		var ret bool
		return ret
	}
	return *o.IsInternational.Get()
}

// GetIsInternationalOk returns a tuple with the IsInternational field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsInternationalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsInternational.Get(), o.IsInternational.IsSet()
}

// HasIsInternational returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsInternational() bool {
	if o != nil && o.IsInternational.IsSet() {
		return true
	}

	return false
}

// SetIsInternational gets a reference to the given NullableBool and assigns it to the IsInternational field.
func (o *EnhanceTransactionResponse) SetIsInternational(v bool) {
	o.IsInternational.Set(&v)
}
// SetIsInternationalNil sets the value for IsInternational to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsInternationalNil() {
	o.IsInternational.Set(nil)
}

// UnsetIsInternational ensures that no value is present for IsInternational, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsInternational() {
	o.IsInternational.Unset()
}

// GetIsOverdraftFee returns the IsOverdraftFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsOverdraftFee() bool {
	if o == nil || IsNil(o.IsOverdraftFee.Get()) {
		var ret bool
		return ret
	}
	return *o.IsOverdraftFee.Get()
}

// GetIsOverdraftFeeOk returns a tuple with the IsOverdraftFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsOverdraftFeeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsOverdraftFee.Get(), o.IsOverdraftFee.IsSet()
}

// HasIsOverdraftFee returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsOverdraftFee() bool {
	if o != nil && o.IsOverdraftFee.IsSet() {
		return true
	}

	return false
}

// SetIsOverdraftFee gets a reference to the given NullableBool and assigns it to the IsOverdraftFee field.
func (o *EnhanceTransactionResponse) SetIsOverdraftFee(v bool) {
	o.IsOverdraftFee.Set(&v)
}
// SetIsOverdraftFeeNil sets the value for IsOverdraftFee to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsOverdraftFeeNil() {
	o.IsOverdraftFee.Set(nil)
}

// UnsetIsOverdraftFee ensures that no value is present for IsOverdraftFee, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsOverdraftFee() {
	o.IsOverdraftFee.Unset()
}

// GetIsPayrollAdvance returns the IsPayrollAdvance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsPayrollAdvance() bool {
	if o == nil || IsNil(o.IsPayrollAdvance.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPayrollAdvance.Get()
}

// GetIsPayrollAdvanceOk returns a tuple with the IsPayrollAdvance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsPayrollAdvanceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPayrollAdvance.Get(), o.IsPayrollAdvance.IsSet()
}

// HasIsPayrollAdvance returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsPayrollAdvance() bool {
	if o != nil && o.IsPayrollAdvance.IsSet() {
		return true
	}

	return false
}

// SetIsPayrollAdvance gets a reference to the given NullableBool and assigns it to the IsPayrollAdvance field.
func (o *EnhanceTransactionResponse) SetIsPayrollAdvance(v bool) {
	o.IsPayrollAdvance.Set(&v)
}
// SetIsPayrollAdvanceNil sets the value for IsPayrollAdvance to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsPayrollAdvanceNil() {
	o.IsPayrollAdvance.Set(nil)
}

// UnsetIsPayrollAdvance ensures that no value is present for IsPayrollAdvance, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsPayrollAdvance() {
	o.IsPayrollAdvance.Unset()
}

// GetIsSubscription returns the IsSubscription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetIsSubscription() bool {
	if o == nil || IsNil(o.IsSubscription.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSubscription.Get()
}

// GetIsSubscriptionOk returns a tuple with the IsSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetIsSubscriptionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSubscription.Get(), o.IsSubscription.IsSet()
}

// HasIsSubscription returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasIsSubscription() bool {
	if o != nil && o.IsSubscription.IsSet() {
		return true
	}

	return false
}

// SetIsSubscription gets a reference to the given NullableBool and assigns it to the IsSubscription field.
func (o *EnhanceTransactionResponse) SetIsSubscription(v bool) {
	o.IsSubscription.Set(&v)
}
// SetIsSubscriptionNil sets the value for IsSubscription to be an explicit nil
func (o *EnhanceTransactionResponse) SetIsSubscriptionNil() {
	o.IsSubscription.Set(nil)
}

// UnsetIsSubscription ensures that no value is present for IsSubscription, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetIsSubscription() {
	o.IsSubscription.Unset()
}

// GetMemo returns the Memo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetMemo() string {
	if o == nil || IsNil(o.Memo.Get()) {
		var ret string
		return ret
	}
	return *o.Memo.Get()
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memo.Get(), o.Memo.IsSet()
}

// HasMemo returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasMemo() bool {
	if o != nil && o.Memo.IsSet() {
		return true
	}

	return false
}

// SetMemo gets a reference to the given NullableString and assigns it to the Memo field.
func (o *EnhanceTransactionResponse) SetMemo(v string) {
	o.Memo.Set(&v)
}
// SetMemoNil sets the value for Memo to be an explicit nil
func (o *EnhanceTransactionResponse) SetMemoNil() {
	o.Memo.Set(nil)
}

// UnsetMemo ensures that no value is present for Memo, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetMemo() {
	o.Memo.Unset()
}

// GetMerchantCategoryCode returns the MerchantCategoryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetMerchantCategoryCode() int32 {
	if o == nil || IsNil(o.MerchantCategoryCode.Get()) {
		var ret int32
		return ret
	}
	return *o.MerchantCategoryCode.Get()
}

// GetMerchantCategoryCodeOk returns a tuple with the MerchantCategoryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetMerchantCategoryCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantCategoryCode.Get(), o.MerchantCategoryCode.IsSet()
}

// HasMerchantCategoryCode returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasMerchantCategoryCode() bool {
	if o != nil && o.MerchantCategoryCode.IsSet() {
		return true
	}

	return false
}

// SetMerchantCategoryCode gets a reference to the given NullableInt32 and assigns it to the MerchantCategoryCode field.
func (o *EnhanceTransactionResponse) SetMerchantCategoryCode(v int32) {
	o.MerchantCategoryCode.Set(&v)
}
// SetMerchantCategoryCodeNil sets the value for MerchantCategoryCode to be an explicit nil
func (o *EnhanceTransactionResponse) SetMerchantCategoryCodeNil() {
	o.MerchantCategoryCode.Set(nil)
}

// UnsetMerchantCategoryCode ensures that no value is present for MerchantCategoryCode, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetMerchantCategoryCode() {
	o.MerchantCategoryCode.Unset()
}

// GetMerchantGuid returns the MerchantGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetMerchantGuid() string {
	if o == nil || IsNil(o.MerchantGuid.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantGuid.Get()
}

// GetMerchantGuidOk returns a tuple with the MerchantGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetMerchantGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantGuid.Get(), o.MerchantGuid.IsSet()
}

// HasMerchantGuid returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasMerchantGuid() bool {
	if o != nil && o.MerchantGuid.IsSet() {
		return true
	}

	return false
}

// SetMerchantGuid gets a reference to the given NullableString and assigns it to the MerchantGuid field.
func (o *EnhanceTransactionResponse) SetMerchantGuid(v string) {
	o.MerchantGuid.Set(&v)
}
// SetMerchantGuidNil sets the value for MerchantGuid to be an explicit nil
func (o *EnhanceTransactionResponse) SetMerchantGuidNil() {
	o.MerchantGuid.Set(nil)
}

// UnsetMerchantGuid ensures that no value is present for MerchantGuid, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetMerchantGuid() {
	o.MerchantGuid.Unset()
}

// GetMerchantLocationGuid returns the MerchantLocationGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetMerchantLocationGuid() string {
	if o == nil || IsNil(o.MerchantLocationGuid.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantLocationGuid.Get()
}

// GetMerchantLocationGuidOk returns a tuple with the MerchantLocationGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetMerchantLocationGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantLocationGuid.Get(), o.MerchantLocationGuid.IsSet()
}

// HasMerchantLocationGuid returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasMerchantLocationGuid() bool {
	if o != nil && o.MerchantLocationGuid.IsSet() {
		return true
	}

	return false
}

// SetMerchantLocationGuid gets a reference to the given NullableString and assigns it to the MerchantLocationGuid field.
func (o *EnhanceTransactionResponse) SetMerchantLocationGuid(v string) {
	o.MerchantLocationGuid.Set(&v)
}
// SetMerchantLocationGuidNil sets the value for MerchantLocationGuid to be an explicit nil
func (o *EnhanceTransactionResponse) SetMerchantLocationGuidNil() {
	o.MerchantLocationGuid.Set(nil)
}

// UnsetMerchantLocationGuid ensures that no value is present for MerchantLocationGuid, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetMerchantLocationGuid() {
	o.MerchantLocationGuid.Unset()
}

// GetOriginalDescription returns the OriginalDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetOriginalDescription() string {
	if o == nil || IsNil(o.OriginalDescription.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalDescription.Get()
}

// GetOriginalDescriptionOk returns a tuple with the OriginalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetOriginalDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalDescription.Get(), o.OriginalDescription.IsSet()
}

// HasOriginalDescription returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasOriginalDescription() bool {
	if o != nil && o.OriginalDescription.IsSet() {
		return true
	}

	return false
}

// SetOriginalDescription gets a reference to the given NullableString and assigns it to the OriginalDescription field.
func (o *EnhanceTransactionResponse) SetOriginalDescription(v string) {
	o.OriginalDescription.Set(&v)
}
// SetOriginalDescriptionNil sets the value for OriginalDescription to be an explicit nil
func (o *EnhanceTransactionResponse) SetOriginalDescriptionNil() {
	o.OriginalDescription.Set(nil)
}

// UnsetOriginalDescription ensures that no value is present for OriginalDescription, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetOriginalDescription() {
	o.OriginalDescription.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhanceTransactionResponse) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhanceTransactionResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *EnhanceTransactionResponse) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *EnhanceTransactionResponse) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *EnhanceTransactionResponse) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *EnhanceTransactionResponse) UnsetType() {
	o.Type.Unset()
}

func (o EnhanceTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnhanceTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}
	if o.CategorizedBy.IsSet() {
		toSerialize["categorized_by"] = o.CategorizedBy.Get()
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.CategoryGuid.IsSet() {
		toSerialize["category_guid"] = o.CategoryGuid.Get()
	}
	if o.DescribedBy.IsSet() {
		toSerialize["described_by"] = o.DescribedBy.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ExtendedTransactionType.IsSet() {
		toSerialize["extended_transaction_type"] = o.ExtendedTransactionType.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsBillPay.IsSet() {
		toSerialize["is_bill_pay"] = o.IsBillPay.Get()
	}
	if o.IsDirectDeposit.IsSet() {
		toSerialize["is_direct_deposit"] = o.IsDirectDeposit.Get()
	}
	if o.IsExpense.IsSet() {
		toSerialize["is_expense"] = o.IsExpense.Get()
	}
	if o.IsFee.IsSet() {
		toSerialize["is_fee"] = o.IsFee.Get()
	}
	if o.IsIncome.IsSet() {
		toSerialize["is_income"] = o.IsIncome.Get()
	}
	if o.IsInternational.IsSet() {
		toSerialize["is_international"] = o.IsInternational.Get()
	}
	if o.IsOverdraftFee.IsSet() {
		toSerialize["is_overdraft_fee"] = o.IsOverdraftFee.Get()
	}
	if o.IsPayrollAdvance.IsSet() {
		toSerialize["is_payroll_advance"] = o.IsPayrollAdvance.Get()
	}
	if o.IsSubscription.IsSet() {
		toSerialize["is_subscription"] = o.IsSubscription.Get()
	}
	if o.Memo.IsSet() {
		toSerialize["memo"] = o.Memo.Get()
	}
	if o.MerchantCategoryCode.IsSet() {
		toSerialize["merchant_category_code"] = o.MerchantCategoryCode.Get()
	}
	if o.MerchantGuid.IsSet() {
		toSerialize["merchant_guid"] = o.MerchantGuid.Get()
	}
	if o.MerchantLocationGuid.IsSet() {
		toSerialize["merchant_location_guid"] = o.MerchantLocationGuid.Get()
	}
	if o.OriginalDescription.IsSet() {
		toSerialize["original_description"] = o.OriginalDescription.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return toSerialize, nil
}

type NullableEnhanceTransactionResponse struct {
	value *EnhanceTransactionResponse
	isSet bool
}

func (v NullableEnhanceTransactionResponse) Get() *EnhanceTransactionResponse {
	return v.value
}

func (v *NullableEnhanceTransactionResponse) Set(val *EnhanceTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEnhanceTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEnhanceTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnhanceTransactionResponse(val *EnhanceTransactionResponse) *NullableEnhanceTransactionResponse {
	return &NullableEnhanceTransactionResponse{value: val, isSet: true}
}

func (v NullableEnhanceTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnhanceTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


