/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// HoldingResponse struct for HoldingResponse
type HoldingResponse struct {
	AccountGuid NullableString `json:"account_guid,omitempty"`
	CostBasis NullableFloat32 `json:"cost_basis,omitempty"`
	CreatedAt NullableString `json:"created_at,omitempty"`
	CurrencyCode NullableString `json:"currency_code,omitempty"`
	Cusip NullableString `json:"cusip,omitempty"`
	DailyChange NullableFloat32 `json:"daily_change,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Guid NullableString `json:"guid,omitempty"`
	HoldingType NullableString `json:"holding_type,omitempty"`
	HoldingTypeId NullableInt32 `json:"holding_type_id,omitempty"`
	Id NullableString `json:"id,omitempty"`
	MarketValue NullableFloat32 `json:"market_value,omitempty"`
	MemberGuid NullableString `json:"member_guid,omitempty"`
	Metadata NullableString `json:"metadata,omitempty"`
	PurchasePrice NullableFloat32 `json:"purchase_price,omitempty"`
	Shares NullableFloat32 `json:"shares,omitempty"`
	Symbol NullableString `json:"symbol,omitempty"`
	UpdatedAt NullableString `json:"updated_at,omitempty"`
	UserGuid NullableString `json:"user_guid,omitempty"`
}

// NewHoldingResponse instantiates a new HoldingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHoldingResponse() *HoldingResponse {
	this := HoldingResponse{}
	return &this
}

// NewHoldingResponseWithDefaults instantiates a new HoldingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHoldingResponseWithDefaults() *HoldingResponse {
	this := HoldingResponse{}
	return &this
}

// GetAccountGuid returns the AccountGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetAccountGuid() string {
	if o == nil || o.AccountGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountGuid.Get()
}

// GetAccountGuidOk returns a tuple with the AccountGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetAccountGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountGuid.Get(), o.AccountGuid.IsSet()
}

// HasAccountGuid returns a boolean if a field has been set.
func (o *HoldingResponse) HasAccountGuid() bool {
	if o != nil && o.AccountGuid.IsSet() {
		return true
	}

	return false
}

// SetAccountGuid gets a reference to the given NullableString and assigns it to the AccountGuid field.
func (o *HoldingResponse) SetAccountGuid(v string) {
	o.AccountGuid.Set(&v)
}
// SetAccountGuidNil sets the value for AccountGuid to be an explicit nil
func (o *HoldingResponse) SetAccountGuidNil() {
	o.AccountGuid.Set(nil)
}

// UnsetAccountGuid ensures that no value is present for AccountGuid, not even an explicit nil
func (o *HoldingResponse) UnsetAccountGuid() {
	o.AccountGuid.Unset()
}

// GetCostBasis returns the CostBasis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetCostBasis() float32 {
	if o == nil || o.CostBasis.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CostBasis.Get()
}

// GetCostBasisOk returns a tuple with the CostBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetCostBasisOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostBasis.Get(), o.CostBasis.IsSet()
}

// HasCostBasis returns a boolean if a field has been set.
func (o *HoldingResponse) HasCostBasis() bool {
	if o != nil && o.CostBasis.IsSet() {
		return true
	}

	return false
}

// SetCostBasis gets a reference to the given NullableFloat32 and assigns it to the CostBasis field.
func (o *HoldingResponse) SetCostBasis(v float32) {
	o.CostBasis.Set(&v)
}
// SetCostBasisNil sets the value for CostBasis to be an explicit nil
func (o *HoldingResponse) SetCostBasisNil() {
	o.CostBasis.Set(nil)
}

// UnsetCostBasis ensures that no value is present for CostBasis, not even an explicit nil
func (o *HoldingResponse) UnsetCostBasis() {
	o.CostBasis.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *HoldingResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *HoldingResponse) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *HoldingResponse) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *HoldingResponse) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode.Get()
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CurrencyCode.Get(), o.CurrencyCode.IsSet()
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *HoldingResponse) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given NullableString and assigns it to the CurrencyCode field.
func (o *HoldingResponse) SetCurrencyCode(v string) {
	o.CurrencyCode.Set(&v)
}
// SetCurrencyCodeNil sets the value for CurrencyCode to be an explicit nil
func (o *HoldingResponse) SetCurrencyCodeNil() {
	o.CurrencyCode.Set(nil)
}

// UnsetCurrencyCode ensures that no value is present for CurrencyCode, not even an explicit nil
func (o *HoldingResponse) UnsetCurrencyCode() {
	o.CurrencyCode.Unset()
}

// GetCusip returns the Cusip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetCusip() string {
	if o == nil || o.Cusip.Get() == nil {
		var ret string
		return ret
	}
	return *o.Cusip.Get()
}

// GetCusipOk returns a tuple with the Cusip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetCusipOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Cusip.Get(), o.Cusip.IsSet()
}

// HasCusip returns a boolean if a field has been set.
func (o *HoldingResponse) HasCusip() bool {
	if o != nil && o.Cusip.IsSet() {
		return true
	}

	return false
}

// SetCusip gets a reference to the given NullableString and assigns it to the Cusip field.
func (o *HoldingResponse) SetCusip(v string) {
	o.Cusip.Set(&v)
}
// SetCusipNil sets the value for Cusip to be an explicit nil
func (o *HoldingResponse) SetCusipNil() {
	o.Cusip.Set(nil)
}

// UnsetCusip ensures that no value is present for Cusip, not even an explicit nil
func (o *HoldingResponse) UnsetCusip() {
	o.Cusip.Unset()
}

// GetDailyChange returns the DailyChange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetDailyChange() float32 {
	if o == nil || o.DailyChange.Get() == nil {
		var ret float32
		return ret
	}
	return *o.DailyChange.Get()
}

// GetDailyChangeOk returns a tuple with the DailyChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetDailyChangeOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DailyChange.Get(), o.DailyChange.IsSet()
}

// HasDailyChange returns a boolean if a field has been set.
func (o *HoldingResponse) HasDailyChange() bool {
	if o != nil && o.DailyChange.IsSet() {
		return true
	}

	return false
}

// SetDailyChange gets a reference to the given NullableFloat32 and assigns it to the DailyChange field.
func (o *HoldingResponse) SetDailyChange(v float32) {
	o.DailyChange.Set(&v)
}
// SetDailyChangeNil sets the value for DailyChange to be an explicit nil
func (o *HoldingResponse) SetDailyChangeNil() {
	o.DailyChange.Set(nil)
}

// UnsetDailyChange ensures that no value is present for DailyChange, not even an explicit nil
func (o *HoldingResponse) UnsetDailyChange() {
	o.DailyChange.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *HoldingResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *HoldingResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *HoldingResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *HoldingResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetGuid() string {
	if o == nil || o.Guid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *HoldingResponse) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *HoldingResponse) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *HoldingResponse) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *HoldingResponse) UnsetGuid() {
	o.Guid.Unset()
}

// GetHoldingType returns the HoldingType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetHoldingType() string {
	if o == nil || o.HoldingType.Get() == nil {
		var ret string
		return ret
	}
	return *o.HoldingType.Get()
}

// GetHoldingTypeOk returns a tuple with the HoldingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetHoldingTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HoldingType.Get(), o.HoldingType.IsSet()
}

// HasHoldingType returns a boolean if a field has been set.
func (o *HoldingResponse) HasHoldingType() bool {
	if o != nil && o.HoldingType.IsSet() {
		return true
	}

	return false
}

// SetHoldingType gets a reference to the given NullableString and assigns it to the HoldingType field.
func (o *HoldingResponse) SetHoldingType(v string) {
	o.HoldingType.Set(&v)
}
// SetHoldingTypeNil sets the value for HoldingType to be an explicit nil
func (o *HoldingResponse) SetHoldingTypeNil() {
	o.HoldingType.Set(nil)
}

// UnsetHoldingType ensures that no value is present for HoldingType, not even an explicit nil
func (o *HoldingResponse) UnsetHoldingType() {
	o.HoldingType.Unset()
}

// GetHoldingTypeId returns the HoldingTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetHoldingTypeId() int32 {
	if o == nil || o.HoldingTypeId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.HoldingTypeId.Get()
}

// GetHoldingTypeIdOk returns a tuple with the HoldingTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetHoldingTypeIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HoldingTypeId.Get(), o.HoldingTypeId.IsSet()
}

// HasHoldingTypeId returns a boolean if a field has been set.
func (o *HoldingResponse) HasHoldingTypeId() bool {
	if o != nil && o.HoldingTypeId.IsSet() {
		return true
	}

	return false
}

// SetHoldingTypeId gets a reference to the given NullableInt32 and assigns it to the HoldingTypeId field.
func (o *HoldingResponse) SetHoldingTypeId(v int32) {
	o.HoldingTypeId.Set(&v)
}
// SetHoldingTypeIdNil sets the value for HoldingTypeId to be an explicit nil
func (o *HoldingResponse) SetHoldingTypeIdNil() {
	o.HoldingTypeId.Set(nil)
}

// UnsetHoldingTypeId ensures that no value is present for HoldingTypeId, not even an explicit nil
func (o *HoldingResponse) UnsetHoldingTypeId() {
	o.HoldingTypeId.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *HoldingResponse) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *HoldingResponse) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *HoldingResponse) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *HoldingResponse) UnsetId() {
	o.Id.Unset()
}

// GetMarketValue returns the MarketValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetMarketValue() float32 {
	if o == nil || o.MarketValue.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MarketValue.Get()
}

// GetMarketValueOk returns a tuple with the MarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetMarketValueOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MarketValue.Get(), o.MarketValue.IsSet()
}

// HasMarketValue returns a boolean if a field has been set.
func (o *HoldingResponse) HasMarketValue() bool {
	if o != nil && o.MarketValue.IsSet() {
		return true
	}

	return false
}

// SetMarketValue gets a reference to the given NullableFloat32 and assigns it to the MarketValue field.
func (o *HoldingResponse) SetMarketValue(v float32) {
	o.MarketValue.Set(&v)
}
// SetMarketValueNil sets the value for MarketValue to be an explicit nil
func (o *HoldingResponse) SetMarketValueNil() {
	o.MarketValue.Set(nil)
}

// UnsetMarketValue ensures that no value is present for MarketValue, not even an explicit nil
func (o *HoldingResponse) UnsetMarketValue() {
	o.MarketValue.Unset()
}

// GetMemberGuid returns the MemberGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetMemberGuid() string {
	if o == nil || o.MemberGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.MemberGuid.Get()
}

// GetMemberGuidOk returns a tuple with the MemberGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetMemberGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MemberGuid.Get(), o.MemberGuid.IsSet()
}

// HasMemberGuid returns a boolean if a field has been set.
func (o *HoldingResponse) HasMemberGuid() bool {
	if o != nil && o.MemberGuid.IsSet() {
		return true
	}

	return false
}

// SetMemberGuid gets a reference to the given NullableString and assigns it to the MemberGuid field.
func (o *HoldingResponse) SetMemberGuid(v string) {
	o.MemberGuid.Set(&v)
}
// SetMemberGuidNil sets the value for MemberGuid to be an explicit nil
func (o *HoldingResponse) SetMemberGuidNil() {
	o.MemberGuid.Set(nil)
}

// UnsetMemberGuid ensures that no value is present for MemberGuid, not even an explicit nil
func (o *HoldingResponse) UnsetMemberGuid() {
	o.MemberGuid.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetMetadata() string {
	if o == nil || o.Metadata.Get() == nil {
		var ret string
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetMetadataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *HoldingResponse) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableString and assigns it to the Metadata field.
func (o *HoldingResponse) SetMetadata(v string) {
	o.Metadata.Set(&v)
}
// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *HoldingResponse) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *HoldingResponse) UnsetMetadata() {
	o.Metadata.Unset()
}

// GetPurchasePrice returns the PurchasePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetPurchasePrice() float32 {
	if o == nil || o.PurchasePrice.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PurchasePrice.Get()
}

// GetPurchasePriceOk returns a tuple with the PurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetPurchasePriceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PurchasePrice.Get(), o.PurchasePrice.IsSet()
}

// HasPurchasePrice returns a boolean if a field has been set.
func (o *HoldingResponse) HasPurchasePrice() bool {
	if o != nil && o.PurchasePrice.IsSet() {
		return true
	}

	return false
}

// SetPurchasePrice gets a reference to the given NullableFloat32 and assigns it to the PurchasePrice field.
func (o *HoldingResponse) SetPurchasePrice(v float32) {
	o.PurchasePrice.Set(&v)
}
// SetPurchasePriceNil sets the value for PurchasePrice to be an explicit nil
func (o *HoldingResponse) SetPurchasePriceNil() {
	o.PurchasePrice.Set(nil)
}

// UnsetPurchasePrice ensures that no value is present for PurchasePrice, not even an explicit nil
func (o *HoldingResponse) UnsetPurchasePrice() {
	o.PurchasePrice.Unset()
}

// GetShares returns the Shares field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetShares() float32 {
	if o == nil || o.Shares.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Shares.Get()
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetSharesOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Shares.Get(), o.Shares.IsSet()
}

// HasShares returns a boolean if a field has been set.
func (o *HoldingResponse) HasShares() bool {
	if o != nil && o.Shares.IsSet() {
		return true
	}

	return false
}

// SetShares gets a reference to the given NullableFloat32 and assigns it to the Shares field.
func (o *HoldingResponse) SetShares(v float32) {
	o.Shares.Set(&v)
}
// SetSharesNil sets the value for Shares to be an explicit nil
func (o *HoldingResponse) SetSharesNil() {
	o.Shares.Set(nil)
}

// UnsetShares ensures that no value is present for Shares, not even an explicit nil
func (o *HoldingResponse) UnsetShares() {
	o.Shares.Unset()
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetSymbol() string {
	if o == nil || o.Symbol.Get() == nil {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetSymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *HoldingResponse) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *HoldingResponse) SetSymbol(v string) {
	o.Symbol.Set(&v)
}
// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *HoldingResponse) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *HoldingResponse) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *HoldingResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *HoldingResponse) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *HoldingResponse) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *HoldingResponse) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUserGuid returns the UserGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HoldingResponse) GetUserGuid() string {
	if o == nil || o.UserGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserGuid.Get()
}

// GetUserGuidOk returns a tuple with the UserGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldingResponse) GetUserGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserGuid.Get(), o.UserGuid.IsSet()
}

// HasUserGuid returns a boolean if a field has been set.
func (o *HoldingResponse) HasUserGuid() bool {
	if o != nil && o.UserGuid.IsSet() {
		return true
	}

	return false
}

// SetUserGuid gets a reference to the given NullableString and assigns it to the UserGuid field.
func (o *HoldingResponse) SetUserGuid(v string) {
	o.UserGuid.Set(&v)
}
// SetUserGuidNil sets the value for UserGuid to be an explicit nil
func (o *HoldingResponse) SetUserGuidNil() {
	o.UserGuid.Set(nil)
}

// UnsetUserGuid ensures that no value is present for UserGuid, not even an explicit nil
func (o *HoldingResponse) UnsetUserGuid() {
	o.UserGuid.Unset()
}

func (o HoldingResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountGuid.IsSet() {
		toSerialize["account_guid"] = o.AccountGuid.Get()
	}
	if o.CostBasis.IsSet() {
		toSerialize["cost_basis"] = o.CostBasis.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.CurrencyCode.IsSet() {
		toSerialize["currency_code"] = o.CurrencyCode.Get()
	}
	if o.Cusip.IsSet() {
		toSerialize["cusip"] = o.Cusip.Get()
	}
	if o.DailyChange.IsSet() {
		toSerialize["daily_change"] = o.DailyChange.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if o.HoldingType.IsSet() {
		toSerialize["holding_type"] = o.HoldingType.Get()
	}
	if o.HoldingTypeId.IsSet() {
		toSerialize["holding_type_id"] = o.HoldingTypeId.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.MarketValue.IsSet() {
		toSerialize["market_value"] = o.MarketValue.Get()
	}
	if o.MemberGuid.IsSet() {
		toSerialize["member_guid"] = o.MemberGuid.Get()
	}
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	if o.PurchasePrice.IsSet() {
		toSerialize["purchase_price"] = o.PurchasePrice.Get()
	}
	if o.Shares.IsSet() {
		toSerialize["shares"] = o.Shares.Get()
	}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.UserGuid.IsSet() {
		toSerialize["user_guid"] = o.UserGuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHoldingResponse struct {
	value *HoldingResponse
	isSet bool
}

func (v NullableHoldingResponse) Get() *HoldingResponse {
	return v.value
}

func (v *NullableHoldingResponse) Set(val *HoldingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHoldingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHoldingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHoldingResponse(val *HoldingResponse) *NullableHoldingResponse {
	return &NullableHoldingResponse{value: val, isSet: true}
}

func (v NullableHoldingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHoldingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


