/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// MemberResumeRequest struct for MemberResumeRequest
type MemberResumeRequest struct {
	Challenges *[]CredentialRequest `json:"challenges,omitempty"`
}

// NewMemberResumeRequest instantiates a new MemberResumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberResumeRequest() *MemberResumeRequest {
	this := MemberResumeRequest{}
	return &this
}

// NewMemberResumeRequestWithDefaults instantiates a new MemberResumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberResumeRequestWithDefaults() *MemberResumeRequest {
	this := MemberResumeRequest{}
	return &this
}

// GetChallenges returns the Challenges field value if set, zero value otherwise.
func (o *MemberResumeRequest) GetChallenges() []CredentialRequest {
	if o == nil || o.Challenges == nil {
		var ret []CredentialRequest
		return ret
	}
	return *o.Challenges
}

// GetChallengesOk returns a tuple with the Challenges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberResumeRequest) GetChallengesOk() (*[]CredentialRequest, bool) {
	if o == nil || o.Challenges == nil {
		return nil, false
	}
	return o.Challenges, true
}

// HasChallenges returns a boolean if a field has been set.
func (o *MemberResumeRequest) HasChallenges() bool {
	if o != nil && o.Challenges != nil {
		return true
	}

	return false
}

// SetChallenges gets a reference to the given []CredentialRequest and assigns it to the Challenges field.
func (o *MemberResumeRequest) SetChallenges(v []CredentialRequest) {
	o.Challenges = &v
}

func (o MemberResumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Challenges != nil {
		toSerialize["challenges"] = o.Challenges
	}
	return json.Marshal(toSerialize)
}

type NullableMemberResumeRequest struct {
	value *MemberResumeRequest
	isSet bool
}

func (v NullableMemberResumeRequest) Get() *MemberResumeRequest {
	return v.value
}

func (v *NullableMemberResumeRequest) Set(val *MemberResumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberResumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberResumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberResumeRequest(val *MemberResumeRequest) *NullableMemberResumeRequest {
	return &NullableMemberResumeRequest{value: val, isSet: true}
}

func (v NullableMemberResumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberResumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


