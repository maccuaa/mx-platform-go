/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// CredentialResponse struct for CredentialResponse
type CredentialResponse struct {
	DisplayOrder NullableInt32 `json:"display_order,omitempty"`
	FieldName NullableString `json:"field_name,omitempty"`
	FieldType NullableString `json:"field_type,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Label *string `json:"label,omitempty"`
}

// NewCredentialResponse instantiates a new CredentialResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialResponse() *CredentialResponse {
	this := CredentialResponse{}
	return &this
}

// NewCredentialResponseWithDefaults instantiates a new CredentialResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialResponseWithDefaults() *CredentialResponse {
	this := CredentialResponse{}
	return &this
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialResponse) GetDisplayOrder() int32 {
	if o == nil || o.DisplayOrder.Get() == nil {
		var ret int32
		return ret
	}
	return *o.DisplayOrder.Get()
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialResponse) GetDisplayOrderOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayOrder.Get(), o.DisplayOrder.IsSet()
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *CredentialResponse) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder.IsSet() {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given NullableInt32 and assigns it to the DisplayOrder field.
func (o *CredentialResponse) SetDisplayOrder(v int32) {
	o.DisplayOrder.Set(&v)
}
// SetDisplayOrderNil sets the value for DisplayOrder to be an explicit nil
func (o *CredentialResponse) SetDisplayOrderNil() {
	o.DisplayOrder.Set(nil)
}

// UnsetDisplayOrder ensures that no value is present for DisplayOrder, not even an explicit nil
func (o *CredentialResponse) UnsetDisplayOrder() {
	o.DisplayOrder.Unset()
}

// GetFieldName returns the FieldName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialResponse) GetFieldName() string {
	if o == nil || o.FieldName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FieldName.Get()
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialResponse) GetFieldNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FieldName.Get(), o.FieldName.IsSet()
}

// HasFieldName returns a boolean if a field has been set.
func (o *CredentialResponse) HasFieldName() bool {
	if o != nil && o.FieldName.IsSet() {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given NullableString and assigns it to the FieldName field.
func (o *CredentialResponse) SetFieldName(v string) {
	o.FieldName.Set(&v)
}
// SetFieldNameNil sets the value for FieldName to be an explicit nil
func (o *CredentialResponse) SetFieldNameNil() {
	o.FieldName.Set(nil)
}

// UnsetFieldName ensures that no value is present for FieldName, not even an explicit nil
func (o *CredentialResponse) UnsetFieldName() {
	o.FieldName.Unset()
}

// GetFieldType returns the FieldType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialResponse) GetFieldType() string {
	if o == nil || o.FieldType.Get() == nil {
		var ret string
		return ret
	}
	return *o.FieldType.Get()
}

// GetFieldTypeOk returns a tuple with the FieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialResponse) GetFieldTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FieldType.Get(), o.FieldType.IsSet()
}

// HasFieldType returns a boolean if a field has been set.
func (o *CredentialResponse) HasFieldType() bool {
	if o != nil && o.FieldType.IsSet() {
		return true
	}

	return false
}

// SetFieldType gets a reference to the given NullableString and assigns it to the FieldType field.
func (o *CredentialResponse) SetFieldType(v string) {
	o.FieldType.Set(&v)
}
// SetFieldTypeNil sets the value for FieldType to be an explicit nil
func (o *CredentialResponse) SetFieldTypeNil() {
	o.FieldType.Set(nil)
}

// UnsetFieldType ensures that no value is present for FieldType, not even an explicit nil
func (o *CredentialResponse) UnsetFieldType() {
	o.FieldType.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *CredentialResponse) GetGuid() string {
	if o == nil || o.Guid == nil {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialResponse) GetGuidOk() (*string, bool) {
	if o == nil || o.Guid == nil {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *CredentialResponse) HasGuid() bool {
	if o != nil && o.Guid != nil {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *CredentialResponse) SetGuid(v string) {
	o.Guid = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CredentialResponse) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialResponse) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CredentialResponse) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CredentialResponse) SetLabel(v string) {
	o.Label = &v
}

func (o CredentialResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayOrder.IsSet() {
		toSerialize["display_order"] = o.DisplayOrder.Get()
	}
	if o.FieldName.IsSet() {
		toSerialize["field_name"] = o.FieldName.Get()
	}
	if o.FieldType.IsSet() {
		toSerialize["field_type"] = o.FieldType.Get()
	}
	if o.Guid != nil {
		toSerialize["guid"] = o.Guid
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialResponse struct {
	value *CredentialResponse
	isSet bool
}

func (v NullableCredentialResponse) Get() *CredentialResponse {
	return v.value
}

func (v *NullableCredentialResponse) Set(val *CredentialResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialResponse(val *CredentialResponse) *NullableCredentialResponse {
	return &NullableCredentialResponse{value: val, isSet: true}
}

func (v NullableCredentialResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


