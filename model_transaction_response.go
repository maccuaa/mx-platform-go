/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// TransactionResponse struct for TransactionResponse
type TransactionResponse struct {
	AccountGuid *string `json:"account_guid,omitempty"`
	AccountId NullableString `json:"account_id,omitempty"`
	Amount NullableFloat32 `json:"amount,omitempty"`
	Category NullableString `json:"category,omitempty"`
	CategoryGuid NullableString `json:"category_guid,omitempty"`
	CheckNumberString NullableString `json:"check_number_string,omitempty"`
	CreatedAt NullableString `json:"created_at,omitempty"`
	CurrencyCode NullableString `json:"currency_code,omitempty"`
	Date NullableString `json:"date,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ExtendedTransactionType NullableString `json:"extended_transaction_type,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Id NullableString `json:"id,omitempty"`
	IsBillPay NullableBool `json:"is_bill_pay,omitempty"`
	IsDirectDeposit NullableBool `json:"is_direct_deposit,omitempty"`
	IsExpense NullableBool `json:"is_expense,omitempty"`
	IsFee NullableBool `json:"is_fee,omitempty"`
	IsIncome NullableBool `json:"is_income,omitempty"`
	IsInternational NullableBool `json:"is_international,omitempty"`
	IsOverdraftFee NullableBool `json:"is_overdraft_fee,omitempty"`
	IsPayrollAdvance NullableBool `json:"is_payroll_advance,omitempty"`
	IsRecurring NullableBool `json:"is_recurring,omitempty"`
	IsSubscription NullableBool `json:"is_subscription,omitempty"`
	Latitude NullableFloat32 `json:"latitude,omitempty"`
	LocalizedDescription NullableString `json:"localized_description,omitempty"`
	LocalizedMemo NullableString `json:"localized_memo,omitempty"`
	Longitude NullableFloat32 `json:"longitude,omitempty"`
	MemberGuid *string `json:"member_guid,omitempty"`
	MemberIsManagedByUser NullableBool `json:"member_is_managed_by_user,omitempty"`
	Memo NullableString `json:"memo,omitempty"`
	MerchantCategoryCode NullableInt32 `json:"merchant_category_code,omitempty"`
	MerchantGuid *string `json:"merchant_guid,omitempty"`
	MerchantLocationGuid *string `json:"merchant_location_guid,omitempty"`
	Metadata NullableString `json:"metadata,omitempty"`
	OriginalDescription NullableString `json:"original_description,omitempty"`
	PostedAt NullableString `json:"posted_at,omitempty"`
	Status NullableString `json:"status,omitempty"`
	TopLevelCategory NullableString `json:"top_level_category,omitempty"`
	TransactedAt NullableString `json:"transacted_at,omitempty"`
	Type NullableString `json:"type,omitempty"`
	UpdatedAt NullableString `json:"updated_at,omitempty"`
	UserGuid *string `json:"user_guid,omitempty"`
	UserId NullableString `json:"user_id,omitempty"`
}

// NewTransactionResponse instantiates a new TransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResponse() *TransactionResponse {
	this := TransactionResponse{}
	return &this
}

// NewTransactionResponseWithDefaults instantiates a new TransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResponseWithDefaults() *TransactionResponse {
	this := TransactionResponse{}
	return &this
}

// GetAccountGuid returns the AccountGuid field value if set, zero value otherwise.
func (o *TransactionResponse) GetAccountGuid() string {
	if o == nil || o.AccountGuid == nil {
		var ret string
		return ret
	}
	return *o.AccountGuid
}

// GetAccountGuidOk returns a tuple with the AccountGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetAccountGuidOk() (*string, bool) {
	if o == nil || o.AccountGuid == nil {
		return nil, false
	}
	return o.AccountGuid, true
}

// HasAccountGuid returns a boolean if a field has been set.
func (o *TransactionResponse) HasAccountGuid() bool {
	if o != nil && o.AccountGuid != nil {
		return true
	}

	return false
}

// SetAccountGuid gets a reference to the given string and assigns it to the AccountGuid field.
func (o *TransactionResponse) SetAccountGuid(v string) {
	o.AccountGuid = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *TransactionResponse) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *TransactionResponse) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *TransactionResponse) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *TransactionResponse) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetAmount() float32 {
	if o == nil || o.Amount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *TransactionResponse) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableFloat32 and assigns it to the Amount field.
func (o *TransactionResponse) SetAmount(v float32) {
	o.Amount.Set(&v)
}
// SetAmountNil sets the value for Amount to be an explicit nil
func (o *TransactionResponse) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *TransactionResponse) UnsetAmount() {
	o.Amount.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *TransactionResponse) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *TransactionResponse) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *TransactionResponse) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *TransactionResponse) UnsetCategory() {
	o.Category.Unset()
}

// GetCategoryGuid returns the CategoryGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetCategoryGuid() string {
	if o == nil || o.CategoryGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.CategoryGuid.Get()
}

// GetCategoryGuidOk returns a tuple with the CategoryGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetCategoryGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CategoryGuid.Get(), o.CategoryGuid.IsSet()
}

// HasCategoryGuid returns a boolean if a field has been set.
func (o *TransactionResponse) HasCategoryGuid() bool {
	if o != nil && o.CategoryGuid.IsSet() {
		return true
	}

	return false
}

// SetCategoryGuid gets a reference to the given NullableString and assigns it to the CategoryGuid field.
func (o *TransactionResponse) SetCategoryGuid(v string) {
	o.CategoryGuid.Set(&v)
}
// SetCategoryGuidNil sets the value for CategoryGuid to be an explicit nil
func (o *TransactionResponse) SetCategoryGuidNil() {
	o.CategoryGuid.Set(nil)
}

// UnsetCategoryGuid ensures that no value is present for CategoryGuid, not even an explicit nil
func (o *TransactionResponse) UnsetCategoryGuid() {
	o.CategoryGuid.Unset()
}

// GetCheckNumberString returns the CheckNumberString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetCheckNumberString() string {
	if o == nil || o.CheckNumberString.Get() == nil {
		var ret string
		return ret
	}
	return *o.CheckNumberString.Get()
}

// GetCheckNumberStringOk returns a tuple with the CheckNumberString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetCheckNumberStringOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CheckNumberString.Get(), o.CheckNumberString.IsSet()
}

// HasCheckNumberString returns a boolean if a field has been set.
func (o *TransactionResponse) HasCheckNumberString() bool {
	if o != nil && o.CheckNumberString.IsSet() {
		return true
	}

	return false
}

// SetCheckNumberString gets a reference to the given NullableString and assigns it to the CheckNumberString field.
func (o *TransactionResponse) SetCheckNumberString(v string) {
	o.CheckNumberString.Set(&v)
}
// SetCheckNumberStringNil sets the value for CheckNumberString to be an explicit nil
func (o *TransactionResponse) SetCheckNumberStringNil() {
	o.CheckNumberString.Set(nil)
}

// UnsetCheckNumberString ensures that no value is present for CheckNumberString, not even an explicit nil
func (o *TransactionResponse) UnsetCheckNumberString() {
	o.CheckNumberString.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TransactionResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *TransactionResponse) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *TransactionResponse) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *TransactionResponse) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode.Get()
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CurrencyCode.Get(), o.CurrencyCode.IsSet()
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *TransactionResponse) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given NullableString and assigns it to the CurrencyCode field.
func (o *TransactionResponse) SetCurrencyCode(v string) {
	o.CurrencyCode.Set(&v)
}
// SetCurrencyCodeNil sets the value for CurrencyCode to be an explicit nil
func (o *TransactionResponse) SetCurrencyCodeNil() {
	o.CurrencyCode.Set(nil)
}

// UnsetCurrencyCode ensures that no value is present for CurrencyCode, not even an explicit nil
func (o *TransactionResponse) UnsetCurrencyCode() {
	o.CurrencyCode.Unset()
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetDate() string {
	if o == nil || o.Date.Get() == nil {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *TransactionResponse) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *TransactionResponse) SetDate(v string) {
	o.Date.Set(&v)
}
// SetDateNil sets the value for Date to be an explicit nil
func (o *TransactionResponse) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *TransactionResponse) UnsetDate() {
	o.Date.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TransactionResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TransactionResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TransactionResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TransactionResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetExtendedTransactionType returns the ExtendedTransactionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetExtendedTransactionType() string {
	if o == nil || o.ExtendedTransactionType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExtendedTransactionType.Get()
}

// GetExtendedTransactionTypeOk returns a tuple with the ExtendedTransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetExtendedTransactionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExtendedTransactionType.Get(), o.ExtendedTransactionType.IsSet()
}

// HasExtendedTransactionType returns a boolean if a field has been set.
func (o *TransactionResponse) HasExtendedTransactionType() bool {
	if o != nil && o.ExtendedTransactionType.IsSet() {
		return true
	}

	return false
}

// SetExtendedTransactionType gets a reference to the given NullableString and assigns it to the ExtendedTransactionType field.
func (o *TransactionResponse) SetExtendedTransactionType(v string) {
	o.ExtendedTransactionType.Set(&v)
}
// SetExtendedTransactionTypeNil sets the value for ExtendedTransactionType to be an explicit nil
func (o *TransactionResponse) SetExtendedTransactionTypeNil() {
	o.ExtendedTransactionType.Set(nil)
}

// UnsetExtendedTransactionType ensures that no value is present for ExtendedTransactionType, not even an explicit nil
func (o *TransactionResponse) UnsetExtendedTransactionType() {
	o.ExtendedTransactionType.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *TransactionResponse) GetGuid() string {
	if o == nil || o.Guid == nil {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetGuidOk() (*string, bool) {
	if o == nil || o.Guid == nil {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *TransactionResponse) HasGuid() bool {
	if o != nil && o.Guid != nil {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *TransactionResponse) SetGuid(v string) {
	o.Guid = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *TransactionResponse) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *TransactionResponse) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *TransactionResponse) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *TransactionResponse) UnsetId() {
	o.Id.Unset()
}

// GetIsBillPay returns the IsBillPay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsBillPay() bool {
	if o == nil || o.IsBillPay.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsBillPay.Get()
}

// GetIsBillPayOk returns a tuple with the IsBillPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsBillPayOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsBillPay.Get(), o.IsBillPay.IsSet()
}

// HasIsBillPay returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsBillPay() bool {
	if o != nil && o.IsBillPay.IsSet() {
		return true
	}

	return false
}

// SetIsBillPay gets a reference to the given NullableBool and assigns it to the IsBillPay field.
func (o *TransactionResponse) SetIsBillPay(v bool) {
	o.IsBillPay.Set(&v)
}
// SetIsBillPayNil sets the value for IsBillPay to be an explicit nil
func (o *TransactionResponse) SetIsBillPayNil() {
	o.IsBillPay.Set(nil)
}

// UnsetIsBillPay ensures that no value is present for IsBillPay, not even an explicit nil
func (o *TransactionResponse) UnsetIsBillPay() {
	o.IsBillPay.Unset()
}

// GetIsDirectDeposit returns the IsDirectDeposit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsDirectDeposit() bool {
	if o == nil || o.IsDirectDeposit.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDirectDeposit.Get()
}

// GetIsDirectDepositOk returns a tuple with the IsDirectDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsDirectDepositOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDirectDeposit.Get(), o.IsDirectDeposit.IsSet()
}

// HasIsDirectDeposit returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsDirectDeposit() bool {
	if o != nil && o.IsDirectDeposit.IsSet() {
		return true
	}

	return false
}

// SetIsDirectDeposit gets a reference to the given NullableBool and assigns it to the IsDirectDeposit field.
func (o *TransactionResponse) SetIsDirectDeposit(v bool) {
	o.IsDirectDeposit.Set(&v)
}
// SetIsDirectDepositNil sets the value for IsDirectDeposit to be an explicit nil
func (o *TransactionResponse) SetIsDirectDepositNil() {
	o.IsDirectDeposit.Set(nil)
}

// UnsetIsDirectDeposit ensures that no value is present for IsDirectDeposit, not even an explicit nil
func (o *TransactionResponse) UnsetIsDirectDeposit() {
	o.IsDirectDeposit.Unset()
}

// GetIsExpense returns the IsExpense field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsExpense() bool {
	if o == nil || o.IsExpense.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsExpense.Get()
}

// GetIsExpenseOk returns a tuple with the IsExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsExpenseOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsExpense.Get(), o.IsExpense.IsSet()
}

// HasIsExpense returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsExpense() bool {
	if o != nil && o.IsExpense.IsSet() {
		return true
	}

	return false
}

// SetIsExpense gets a reference to the given NullableBool and assigns it to the IsExpense field.
func (o *TransactionResponse) SetIsExpense(v bool) {
	o.IsExpense.Set(&v)
}
// SetIsExpenseNil sets the value for IsExpense to be an explicit nil
func (o *TransactionResponse) SetIsExpenseNil() {
	o.IsExpense.Set(nil)
}

// UnsetIsExpense ensures that no value is present for IsExpense, not even an explicit nil
func (o *TransactionResponse) UnsetIsExpense() {
	o.IsExpense.Unset()
}

// GetIsFee returns the IsFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsFee() bool {
	if o == nil || o.IsFee.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsFee.Get()
}

// GetIsFeeOk returns a tuple with the IsFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsFeeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsFee.Get(), o.IsFee.IsSet()
}

// HasIsFee returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsFee() bool {
	if o != nil && o.IsFee.IsSet() {
		return true
	}

	return false
}

// SetIsFee gets a reference to the given NullableBool and assigns it to the IsFee field.
func (o *TransactionResponse) SetIsFee(v bool) {
	o.IsFee.Set(&v)
}
// SetIsFeeNil sets the value for IsFee to be an explicit nil
func (o *TransactionResponse) SetIsFeeNil() {
	o.IsFee.Set(nil)
}

// UnsetIsFee ensures that no value is present for IsFee, not even an explicit nil
func (o *TransactionResponse) UnsetIsFee() {
	o.IsFee.Unset()
}

// GetIsIncome returns the IsIncome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsIncome() bool {
	if o == nil || o.IsIncome.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsIncome.Get()
}

// GetIsIncomeOk returns a tuple with the IsIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsIncomeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsIncome.Get(), o.IsIncome.IsSet()
}

// HasIsIncome returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsIncome() bool {
	if o != nil && o.IsIncome.IsSet() {
		return true
	}

	return false
}

// SetIsIncome gets a reference to the given NullableBool and assigns it to the IsIncome field.
func (o *TransactionResponse) SetIsIncome(v bool) {
	o.IsIncome.Set(&v)
}
// SetIsIncomeNil sets the value for IsIncome to be an explicit nil
func (o *TransactionResponse) SetIsIncomeNil() {
	o.IsIncome.Set(nil)
}

// UnsetIsIncome ensures that no value is present for IsIncome, not even an explicit nil
func (o *TransactionResponse) UnsetIsIncome() {
	o.IsIncome.Unset()
}

// GetIsInternational returns the IsInternational field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsInternational() bool {
	if o == nil || o.IsInternational.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsInternational.Get()
}

// GetIsInternationalOk returns a tuple with the IsInternational field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsInternationalOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsInternational.Get(), o.IsInternational.IsSet()
}

// HasIsInternational returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsInternational() bool {
	if o != nil && o.IsInternational.IsSet() {
		return true
	}

	return false
}

// SetIsInternational gets a reference to the given NullableBool and assigns it to the IsInternational field.
func (o *TransactionResponse) SetIsInternational(v bool) {
	o.IsInternational.Set(&v)
}
// SetIsInternationalNil sets the value for IsInternational to be an explicit nil
func (o *TransactionResponse) SetIsInternationalNil() {
	o.IsInternational.Set(nil)
}

// UnsetIsInternational ensures that no value is present for IsInternational, not even an explicit nil
func (o *TransactionResponse) UnsetIsInternational() {
	o.IsInternational.Unset()
}

// GetIsOverdraftFee returns the IsOverdraftFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsOverdraftFee() bool {
	if o == nil || o.IsOverdraftFee.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsOverdraftFee.Get()
}

// GetIsOverdraftFeeOk returns a tuple with the IsOverdraftFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsOverdraftFeeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsOverdraftFee.Get(), o.IsOverdraftFee.IsSet()
}

// HasIsOverdraftFee returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsOverdraftFee() bool {
	if o != nil && o.IsOverdraftFee.IsSet() {
		return true
	}

	return false
}

// SetIsOverdraftFee gets a reference to the given NullableBool and assigns it to the IsOverdraftFee field.
func (o *TransactionResponse) SetIsOverdraftFee(v bool) {
	o.IsOverdraftFee.Set(&v)
}
// SetIsOverdraftFeeNil sets the value for IsOverdraftFee to be an explicit nil
func (o *TransactionResponse) SetIsOverdraftFeeNil() {
	o.IsOverdraftFee.Set(nil)
}

// UnsetIsOverdraftFee ensures that no value is present for IsOverdraftFee, not even an explicit nil
func (o *TransactionResponse) UnsetIsOverdraftFee() {
	o.IsOverdraftFee.Unset()
}

// GetIsPayrollAdvance returns the IsPayrollAdvance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsPayrollAdvance() bool {
	if o == nil || o.IsPayrollAdvance.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPayrollAdvance.Get()
}

// GetIsPayrollAdvanceOk returns a tuple with the IsPayrollAdvance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsPayrollAdvanceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPayrollAdvance.Get(), o.IsPayrollAdvance.IsSet()
}

// HasIsPayrollAdvance returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsPayrollAdvance() bool {
	if o != nil && o.IsPayrollAdvance.IsSet() {
		return true
	}

	return false
}

// SetIsPayrollAdvance gets a reference to the given NullableBool and assigns it to the IsPayrollAdvance field.
func (o *TransactionResponse) SetIsPayrollAdvance(v bool) {
	o.IsPayrollAdvance.Set(&v)
}
// SetIsPayrollAdvanceNil sets the value for IsPayrollAdvance to be an explicit nil
func (o *TransactionResponse) SetIsPayrollAdvanceNil() {
	o.IsPayrollAdvance.Set(nil)
}

// UnsetIsPayrollAdvance ensures that no value is present for IsPayrollAdvance, not even an explicit nil
func (o *TransactionResponse) UnsetIsPayrollAdvance() {
	o.IsPayrollAdvance.Unset()
}

// GetIsRecurring returns the IsRecurring field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsRecurring() bool {
	if o == nil || o.IsRecurring.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRecurring.Get()
}

// GetIsRecurringOk returns a tuple with the IsRecurring field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsRecurringOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRecurring.Get(), o.IsRecurring.IsSet()
}

// HasIsRecurring returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsRecurring() bool {
	if o != nil && o.IsRecurring.IsSet() {
		return true
	}

	return false
}

// SetIsRecurring gets a reference to the given NullableBool and assigns it to the IsRecurring field.
func (o *TransactionResponse) SetIsRecurring(v bool) {
	o.IsRecurring.Set(&v)
}
// SetIsRecurringNil sets the value for IsRecurring to be an explicit nil
func (o *TransactionResponse) SetIsRecurringNil() {
	o.IsRecurring.Set(nil)
}

// UnsetIsRecurring ensures that no value is present for IsRecurring, not even an explicit nil
func (o *TransactionResponse) UnsetIsRecurring() {
	o.IsRecurring.Unset()
}

// GetIsSubscription returns the IsSubscription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetIsSubscription() bool {
	if o == nil || o.IsSubscription.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSubscription.Get()
}

// GetIsSubscriptionOk returns a tuple with the IsSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetIsSubscriptionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSubscription.Get(), o.IsSubscription.IsSet()
}

// HasIsSubscription returns a boolean if a field has been set.
func (o *TransactionResponse) HasIsSubscription() bool {
	if o != nil && o.IsSubscription.IsSet() {
		return true
	}

	return false
}

// SetIsSubscription gets a reference to the given NullableBool and assigns it to the IsSubscription field.
func (o *TransactionResponse) SetIsSubscription(v bool) {
	o.IsSubscription.Set(&v)
}
// SetIsSubscriptionNil sets the value for IsSubscription to be an explicit nil
func (o *TransactionResponse) SetIsSubscriptionNil() {
	o.IsSubscription.Set(nil)
}

// UnsetIsSubscription ensures that no value is present for IsSubscription, not even an explicit nil
func (o *TransactionResponse) UnsetIsSubscription() {
	o.IsSubscription.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetLatitude() float32 {
	if o == nil || o.Latitude.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetLatitudeOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *TransactionResponse) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableFloat32 and assigns it to the Latitude field.
func (o *TransactionResponse) SetLatitude(v float32) {
	o.Latitude.Set(&v)
}
// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *TransactionResponse) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *TransactionResponse) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLocalizedDescription returns the LocalizedDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetLocalizedDescription() string {
	if o == nil || o.LocalizedDescription.Get() == nil {
		var ret string
		return ret
	}
	return *o.LocalizedDescription.Get()
}

// GetLocalizedDescriptionOk returns a tuple with the LocalizedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetLocalizedDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LocalizedDescription.Get(), o.LocalizedDescription.IsSet()
}

// HasLocalizedDescription returns a boolean if a field has been set.
func (o *TransactionResponse) HasLocalizedDescription() bool {
	if o != nil && o.LocalizedDescription.IsSet() {
		return true
	}

	return false
}

// SetLocalizedDescription gets a reference to the given NullableString and assigns it to the LocalizedDescription field.
func (o *TransactionResponse) SetLocalizedDescription(v string) {
	o.LocalizedDescription.Set(&v)
}
// SetLocalizedDescriptionNil sets the value for LocalizedDescription to be an explicit nil
func (o *TransactionResponse) SetLocalizedDescriptionNil() {
	o.LocalizedDescription.Set(nil)
}

// UnsetLocalizedDescription ensures that no value is present for LocalizedDescription, not even an explicit nil
func (o *TransactionResponse) UnsetLocalizedDescription() {
	o.LocalizedDescription.Unset()
}

// GetLocalizedMemo returns the LocalizedMemo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetLocalizedMemo() string {
	if o == nil || o.LocalizedMemo.Get() == nil {
		var ret string
		return ret
	}
	return *o.LocalizedMemo.Get()
}

// GetLocalizedMemoOk returns a tuple with the LocalizedMemo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetLocalizedMemoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LocalizedMemo.Get(), o.LocalizedMemo.IsSet()
}

// HasLocalizedMemo returns a boolean if a field has been set.
func (o *TransactionResponse) HasLocalizedMemo() bool {
	if o != nil && o.LocalizedMemo.IsSet() {
		return true
	}

	return false
}

// SetLocalizedMemo gets a reference to the given NullableString and assigns it to the LocalizedMemo field.
func (o *TransactionResponse) SetLocalizedMemo(v string) {
	o.LocalizedMemo.Set(&v)
}
// SetLocalizedMemoNil sets the value for LocalizedMemo to be an explicit nil
func (o *TransactionResponse) SetLocalizedMemoNil() {
	o.LocalizedMemo.Set(nil)
}

// UnsetLocalizedMemo ensures that no value is present for LocalizedMemo, not even an explicit nil
func (o *TransactionResponse) UnsetLocalizedMemo() {
	o.LocalizedMemo.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetLongitude() float32 {
	if o == nil || o.Longitude.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetLongitudeOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *TransactionResponse) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableFloat32 and assigns it to the Longitude field.
func (o *TransactionResponse) SetLongitude(v float32) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *TransactionResponse) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *TransactionResponse) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetMemberGuid returns the MemberGuid field value if set, zero value otherwise.
func (o *TransactionResponse) GetMemberGuid() string {
	if o == nil || o.MemberGuid == nil {
		var ret string
		return ret
	}
	return *o.MemberGuid
}

// GetMemberGuidOk returns a tuple with the MemberGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetMemberGuidOk() (*string, bool) {
	if o == nil || o.MemberGuid == nil {
		return nil, false
	}
	return o.MemberGuid, true
}

// HasMemberGuid returns a boolean if a field has been set.
func (o *TransactionResponse) HasMemberGuid() bool {
	if o != nil && o.MemberGuid != nil {
		return true
	}

	return false
}

// SetMemberGuid gets a reference to the given string and assigns it to the MemberGuid field.
func (o *TransactionResponse) SetMemberGuid(v string) {
	o.MemberGuid = &v
}

// GetMemberIsManagedByUser returns the MemberIsManagedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetMemberIsManagedByUser() bool {
	if o == nil || o.MemberIsManagedByUser.Get() == nil {
		var ret bool
		return ret
	}
	return *o.MemberIsManagedByUser.Get()
}

// GetMemberIsManagedByUserOk returns a tuple with the MemberIsManagedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetMemberIsManagedByUserOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MemberIsManagedByUser.Get(), o.MemberIsManagedByUser.IsSet()
}

// HasMemberIsManagedByUser returns a boolean if a field has been set.
func (o *TransactionResponse) HasMemberIsManagedByUser() bool {
	if o != nil && o.MemberIsManagedByUser.IsSet() {
		return true
	}

	return false
}

// SetMemberIsManagedByUser gets a reference to the given NullableBool and assigns it to the MemberIsManagedByUser field.
func (o *TransactionResponse) SetMemberIsManagedByUser(v bool) {
	o.MemberIsManagedByUser.Set(&v)
}
// SetMemberIsManagedByUserNil sets the value for MemberIsManagedByUser to be an explicit nil
func (o *TransactionResponse) SetMemberIsManagedByUserNil() {
	o.MemberIsManagedByUser.Set(nil)
}

// UnsetMemberIsManagedByUser ensures that no value is present for MemberIsManagedByUser, not even an explicit nil
func (o *TransactionResponse) UnsetMemberIsManagedByUser() {
	o.MemberIsManagedByUser.Unset()
}

// GetMemo returns the Memo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetMemo() string {
	if o == nil || o.Memo.Get() == nil {
		var ret string
		return ret
	}
	return *o.Memo.Get()
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetMemoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Memo.Get(), o.Memo.IsSet()
}

// HasMemo returns a boolean if a field has been set.
func (o *TransactionResponse) HasMemo() bool {
	if o != nil && o.Memo.IsSet() {
		return true
	}

	return false
}

// SetMemo gets a reference to the given NullableString and assigns it to the Memo field.
func (o *TransactionResponse) SetMemo(v string) {
	o.Memo.Set(&v)
}
// SetMemoNil sets the value for Memo to be an explicit nil
func (o *TransactionResponse) SetMemoNil() {
	o.Memo.Set(nil)
}

// UnsetMemo ensures that no value is present for Memo, not even an explicit nil
func (o *TransactionResponse) UnsetMemo() {
	o.Memo.Unset()
}

// GetMerchantCategoryCode returns the MerchantCategoryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetMerchantCategoryCode() int32 {
	if o == nil || o.MerchantCategoryCode.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MerchantCategoryCode.Get()
}

// GetMerchantCategoryCodeOk returns a tuple with the MerchantCategoryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetMerchantCategoryCodeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantCategoryCode.Get(), o.MerchantCategoryCode.IsSet()
}

// HasMerchantCategoryCode returns a boolean if a field has been set.
func (o *TransactionResponse) HasMerchantCategoryCode() bool {
	if o != nil && o.MerchantCategoryCode.IsSet() {
		return true
	}

	return false
}

// SetMerchantCategoryCode gets a reference to the given NullableInt32 and assigns it to the MerchantCategoryCode field.
func (o *TransactionResponse) SetMerchantCategoryCode(v int32) {
	o.MerchantCategoryCode.Set(&v)
}
// SetMerchantCategoryCodeNil sets the value for MerchantCategoryCode to be an explicit nil
func (o *TransactionResponse) SetMerchantCategoryCodeNil() {
	o.MerchantCategoryCode.Set(nil)
}

// UnsetMerchantCategoryCode ensures that no value is present for MerchantCategoryCode, not even an explicit nil
func (o *TransactionResponse) UnsetMerchantCategoryCode() {
	o.MerchantCategoryCode.Unset()
}

// GetMerchantGuid returns the MerchantGuid field value if set, zero value otherwise.
func (o *TransactionResponse) GetMerchantGuid() string {
	if o == nil || o.MerchantGuid == nil {
		var ret string
		return ret
	}
	return *o.MerchantGuid
}

// GetMerchantGuidOk returns a tuple with the MerchantGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetMerchantGuidOk() (*string, bool) {
	if o == nil || o.MerchantGuid == nil {
		return nil, false
	}
	return o.MerchantGuid, true
}

// HasMerchantGuid returns a boolean if a field has been set.
func (o *TransactionResponse) HasMerchantGuid() bool {
	if o != nil && o.MerchantGuid != nil {
		return true
	}

	return false
}

// SetMerchantGuid gets a reference to the given string and assigns it to the MerchantGuid field.
func (o *TransactionResponse) SetMerchantGuid(v string) {
	o.MerchantGuid = &v
}

// GetMerchantLocationGuid returns the MerchantLocationGuid field value if set, zero value otherwise.
func (o *TransactionResponse) GetMerchantLocationGuid() string {
	if o == nil || o.MerchantLocationGuid == nil {
		var ret string
		return ret
	}
	return *o.MerchantLocationGuid
}

// GetMerchantLocationGuidOk returns a tuple with the MerchantLocationGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetMerchantLocationGuidOk() (*string, bool) {
	if o == nil || o.MerchantLocationGuid == nil {
		return nil, false
	}
	return o.MerchantLocationGuid, true
}

// HasMerchantLocationGuid returns a boolean if a field has been set.
func (o *TransactionResponse) HasMerchantLocationGuid() bool {
	if o != nil && o.MerchantLocationGuid != nil {
		return true
	}

	return false
}

// SetMerchantLocationGuid gets a reference to the given string and assigns it to the MerchantLocationGuid field.
func (o *TransactionResponse) SetMerchantLocationGuid(v string) {
	o.MerchantLocationGuid = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetMetadata() string {
	if o == nil || o.Metadata.Get() == nil {
		var ret string
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetMetadataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *TransactionResponse) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableString and assigns it to the Metadata field.
func (o *TransactionResponse) SetMetadata(v string) {
	o.Metadata.Set(&v)
}
// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *TransactionResponse) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *TransactionResponse) UnsetMetadata() {
	o.Metadata.Unset()
}

// GetOriginalDescription returns the OriginalDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetOriginalDescription() string {
	if o == nil || o.OriginalDescription.Get() == nil {
		var ret string
		return ret
	}
	return *o.OriginalDescription.Get()
}

// GetOriginalDescriptionOk returns a tuple with the OriginalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetOriginalDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OriginalDescription.Get(), o.OriginalDescription.IsSet()
}

// HasOriginalDescription returns a boolean if a field has been set.
func (o *TransactionResponse) HasOriginalDescription() bool {
	if o != nil && o.OriginalDescription.IsSet() {
		return true
	}

	return false
}

// SetOriginalDescription gets a reference to the given NullableString and assigns it to the OriginalDescription field.
func (o *TransactionResponse) SetOriginalDescription(v string) {
	o.OriginalDescription.Set(&v)
}
// SetOriginalDescriptionNil sets the value for OriginalDescription to be an explicit nil
func (o *TransactionResponse) SetOriginalDescriptionNil() {
	o.OriginalDescription.Set(nil)
}

// UnsetOriginalDescription ensures that no value is present for OriginalDescription, not even an explicit nil
func (o *TransactionResponse) UnsetOriginalDescription() {
	o.OriginalDescription.Unset()
}

// GetPostedAt returns the PostedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetPostedAt() string {
	if o == nil || o.PostedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.PostedAt.Get()
}

// GetPostedAtOk returns a tuple with the PostedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetPostedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PostedAt.Get(), o.PostedAt.IsSet()
}

// HasPostedAt returns a boolean if a field has been set.
func (o *TransactionResponse) HasPostedAt() bool {
	if o != nil && o.PostedAt.IsSet() {
		return true
	}

	return false
}

// SetPostedAt gets a reference to the given NullableString and assigns it to the PostedAt field.
func (o *TransactionResponse) SetPostedAt(v string) {
	o.PostedAt.Set(&v)
}
// SetPostedAtNil sets the value for PostedAt to be an explicit nil
func (o *TransactionResponse) SetPostedAtNil() {
	o.PostedAt.Set(nil)
}

// UnsetPostedAt ensures that no value is present for PostedAt, not even an explicit nil
func (o *TransactionResponse) UnsetPostedAt() {
	o.PostedAt.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *TransactionResponse) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *TransactionResponse) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *TransactionResponse) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *TransactionResponse) UnsetStatus() {
	o.Status.Unset()
}

// GetTopLevelCategory returns the TopLevelCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetTopLevelCategory() string {
	if o == nil || o.TopLevelCategory.Get() == nil {
		var ret string
		return ret
	}
	return *o.TopLevelCategory.Get()
}

// GetTopLevelCategoryOk returns a tuple with the TopLevelCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetTopLevelCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TopLevelCategory.Get(), o.TopLevelCategory.IsSet()
}

// HasTopLevelCategory returns a boolean if a field has been set.
func (o *TransactionResponse) HasTopLevelCategory() bool {
	if o != nil && o.TopLevelCategory.IsSet() {
		return true
	}

	return false
}

// SetTopLevelCategory gets a reference to the given NullableString and assigns it to the TopLevelCategory field.
func (o *TransactionResponse) SetTopLevelCategory(v string) {
	o.TopLevelCategory.Set(&v)
}
// SetTopLevelCategoryNil sets the value for TopLevelCategory to be an explicit nil
func (o *TransactionResponse) SetTopLevelCategoryNil() {
	o.TopLevelCategory.Set(nil)
}

// UnsetTopLevelCategory ensures that no value is present for TopLevelCategory, not even an explicit nil
func (o *TransactionResponse) UnsetTopLevelCategory() {
	o.TopLevelCategory.Unset()
}

// GetTransactedAt returns the TransactedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetTransactedAt() string {
	if o == nil || o.TransactedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.TransactedAt.Get()
}

// GetTransactedAtOk returns a tuple with the TransactedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetTransactedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TransactedAt.Get(), o.TransactedAt.IsSet()
}

// HasTransactedAt returns a boolean if a field has been set.
func (o *TransactionResponse) HasTransactedAt() bool {
	if o != nil && o.TransactedAt.IsSet() {
		return true
	}

	return false
}

// SetTransactedAt gets a reference to the given NullableString and assigns it to the TransactedAt field.
func (o *TransactionResponse) SetTransactedAt(v string) {
	o.TransactedAt.Set(&v)
}
// SetTransactedAtNil sets the value for TransactedAt to be an explicit nil
func (o *TransactionResponse) SetTransactedAtNil() {
	o.TransactedAt.Set(nil)
}

// UnsetTransactedAt ensures that no value is present for TransactedAt, not even an explicit nil
func (o *TransactionResponse) UnsetTransactedAt() {
	o.TransactedAt.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *TransactionResponse) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *TransactionResponse) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *TransactionResponse) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *TransactionResponse) UnsetType() {
	o.Type.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TransactionResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *TransactionResponse) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *TransactionResponse) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *TransactionResponse) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUserGuid returns the UserGuid field value if set, zero value otherwise.
func (o *TransactionResponse) GetUserGuid() string {
	if o == nil || o.UserGuid == nil {
		var ret string
		return ret
	}
	return *o.UserGuid
}

// GetUserGuidOk returns a tuple with the UserGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetUserGuidOk() (*string, bool) {
	if o == nil || o.UserGuid == nil {
		return nil, false
	}
	return o.UserGuid, true
}

// HasUserGuid returns a boolean if a field has been set.
func (o *TransactionResponse) HasUserGuid() bool {
	if o != nil && o.UserGuid != nil {
		return true
	}

	return false
}

// SetUserGuid gets a reference to the given string and assigns it to the UserGuid field.
func (o *TransactionResponse) SetUserGuid(v string) {
	o.UserGuid = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionResponse) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResponse) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *TransactionResponse) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *TransactionResponse) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *TransactionResponse) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *TransactionResponse) UnsetUserId() {
	o.UserId.Unset()
}

func (o TransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountGuid != nil {
		toSerialize["account_guid"] = o.AccountGuid
	}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.CategoryGuid.IsSet() {
		toSerialize["category_guid"] = o.CategoryGuid.Get()
	}
	if o.CheckNumberString.IsSet() {
		toSerialize["check_number_string"] = o.CheckNumberString.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.CurrencyCode.IsSet() {
		toSerialize["currency_code"] = o.CurrencyCode.Get()
	}
	if o.Date.IsSet() {
		toSerialize["date"] = o.Date.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ExtendedTransactionType.IsSet() {
		toSerialize["extended_transaction_type"] = o.ExtendedTransactionType.Get()
	}
	if o.Guid != nil {
		toSerialize["guid"] = o.Guid
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsBillPay.IsSet() {
		toSerialize["is_bill_pay"] = o.IsBillPay.Get()
	}
	if o.IsDirectDeposit.IsSet() {
		toSerialize["is_direct_deposit"] = o.IsDirectDeposit.Get()
	}
	if o.IsExpense.IsSet() {
		toSerialize["is_expense"] = o.IsExpense.Get()
	}
	if o.IsFee.IsSet() {
		toSerialize["is_fee"] = o.IsFee.Get()
	}
	if o.IsIncome.IsSet() {
		toSerialize["is_income"] = o.IsIncome.Get()
	}
	if o.IsInternational.IsSet() {
		toSerialize["is_international"] = o.IsInternational.Get()
	}
	if o.IsOverdraftFee.IsSet() {
		toSerialize["is_overdraft_fee"] = o.IsOverdraftFee.Get()
	}
	if o.IsPayrollAdvance.IsSet() {
		toSerialize["is_payroll_advance"] = o.IsPayrollAdvance.Get()
	}
	if o.IsRecurring.IsSet() {
		toSerialize["is_recurring"] = o.IsRecurring.Get()
	}
	if o.IsSubscription.IsSet() {
		toSerialize["is_subscription"] = o.IsSubscription.Get()
	}
	if o.Latitude.IsSet() {
		toSerialize["latitude"] = o.Latitude.Get()
	}
	if o.LocalizedDescription.IsSet() {
		toSerialize["localized_description"] = o.LocalizedDescription.Get()
	}
	if o.LocalizedMemo.IsSet() {
		toSerialize["localized_memo"] = o.LocalizedMemo.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["longitude"] = o.Longitude.Get()
	}
	if o.MemberGuid != nil {
		toSerialize["member_guid"] = o.MemberGuid
	}
	if o.MemberIsManagedByUser.IsSet() {
		toSerialize["member_is_managed_by_user"] = o.MemberIsManagedByUser.Get()
	}
	if o.Memo.IsSet() {
		toSerialize["memo"] = o.Memo.Get()
	}
	if o.MerchantCategoryCode.IsSet() {
		toSerialize["merchant_category_code"] = o.MerchantCategoryCode.Get()
	}
	if o.MerchantGuid != nil {
		toSerialize["merchant_guid"] = o.MerchantGuid
	}
	if o.MerchantLocationGuid != nil {
		toSerialize["merchant_location_guid"] = o.MerchantLocationGuid
	}
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	if o.OriginalDescription.IsSet() {
		toSerialize["original_description"] = o.OriginalDescription.Get()
	}
	if o.PostedAt.IsSet() {
		toSerialize["posted_at"] = o.PostedAt.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TopLevelCategory.IsSet() {
		toSerialize["top_level_category"] = o.TopLevelCategory.Get()
	}
	if o.TransactedAt.IsSet() {
		toSerialize["transacted_at"] = o.TransactedAt.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.UserGuid != nil {
		toSerialize["user_guid"] = o.UserGuid
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionResponse struct {
	value *TransactionResponse
	isSet bool
}

func (v NullableTransactionResponse) Get() *TransactionResponse {
	return v.value
}

func (v *NullableTransactionResponse) Set(val *TransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResponse(val *TransactionResponse) *NullableTransactionResponse {
	return &NullableTransactionResponse{value: val, isSet: true}
}

func (v NullableTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


