/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the PaginationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginationResponse{}

// PaginationResponse struct for PaginationResponse
type PaginationResponse struct {
	CurrentPage *int32 `json:"current_page,omitempty"`
	PerPage *int32 `json:"per_page,omitempty"`
	TotalEntries *int32 `json:"total_entries,omitempty"`
	TotalPages *int32 `json:"total_pages,omitempty"`
}

// NewPaginationResponse instantiates a new PaginationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationResponse() *PaginationResponse {
	this := PaginationResponse{}
	return &this
}

// NewPaginationResponseWithDefaults instantiates a new PaginationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationResponseWithDefaults() *PaginationResponse {
	this := PaginationResponse{}
	return &this
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *PaginationResponse) GetCurrentPage() int32 {
	if o == nil || IsNil(o.CurrentPage) {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetCurrentPageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPage) {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *PaginationResponse) HasCurrentPage() bool {
	if o != nil && !IsNil(o.CurrentPage) {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *PaginationResponse) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *PaginationResponse) GetPerPage() int32 {
	if o == nil || IsNil(o.PerPage) {
		var ret int32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetPerPageOk() (*int32, bool) {
	if o == nil || IsNil(o.PerPage) {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *PaginationResponse) HasPerPage() bool {
	if o != nil && !IsNil(o.PerPage) {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given int32 and assigns it to the PerPage field.
func (o *PaginationResponse) SetPerPage(v int32) {
	o.PerPage = &v
}

// GetTotalEntries returns the TotalEntries field value if set, zero value otherwise.
func (o *PaginationResponse) GetTotalEntries() int32 {
	if o == nil || IsNil(o.TotalEntries) {
		var ret int32
		return ret
	}
	return *o.TotalEntries
}

// GetTotalEntriesOk returns a tuple with the TotalEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetTotalEntriesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalEntries) {
		return nil, false
	}
	return o.TotalEntries, true
}

// HasTotalEntries returns a boolean if a field has been set.
func (o *PaginationResponse) HasTotalEntries() bool {
	if o != nil && !IsNil(o.TotalEntries) {
		return true
	}

	return false
}

// SetTotalEntries gets a reference to the given int32 and assigns it to the TotalEntries field.
func (o *PaginationResponse) SetTotalEntries(v int32) {
	o.TotalEntries = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *PaginationResponse) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResponse) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *PaginationResponse) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *PaginationResponse) SetTotalPages(v int32) {
	o.TotalPages = &v
}

func (o PaginationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentPage) {
		toSerialize["current_page"] = o.CurrentPage
	}
	if !IsNil(o.PerPage) {
		toSerialize["per_page"] = o.PerPage
	}
	if !IsNil(o.TotalEntries) {
		toSerialize["total_entries"] = o.TotalEntries
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total_pages"] = o.TotalPages
	}
	return toSerialize, nil
}

type NullablePaginationResponse struct {
	value *PaginationResponse
	isSet bool
}

func (v NullablePaginationResponse) Get() *PaginationResponse {
	return v.value
}

func (v *NullablePaginationResponse) Set(val *PaginationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationResponse(val *PaginationResponse) *NullablePaginationResponse {
	return &NullablePaginationResponse{value: val, isSet: true}
}

func (v NullablePaginationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


