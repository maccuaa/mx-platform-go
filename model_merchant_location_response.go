/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the MerchantLocationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantLocationResponse{}

// MerchantLocationResponse struct for MerchantLocationResponse
type MerchantLocationResponse struct {
	City NullableString `json:"city,omitempty"`
	Country NullableString `json:"country,omitempty"`
	CreatedAt NullableString `json:"created_at,omitempty"`
	Guid NullableString `json:"guid,omitempty"`
	Latitude NullableFloat32 `json:"latitude,omitempty"`
	Longitude NullableFloat32 `json:"longitude,omitempty"`
	MerchantGuid NullableString `json:"merchant_guid,omitempty"`
	PhoneNumber NullableString `json:"phone_number,omitempty"`
	PostalCode NullableString `json:"postal_code,omitempty"`
	State NullableString `json:"state,omitempty"`
	StreetAddress NullableString `json:"street_address,omitempty"`
	UpdatedAt NullableString `json:"updated_at,omitempty"`
}

// NewMerchantLocationResponse instantiates a new MerchantLocationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantLocationResponse() *MerchantLocationResponse {
	this := MerchantLocationResponse{}
	return &this
}

// NewMerchantLocationResponseWithDefaults instantiates a new MerchantLocationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantLocationResponseWithDefaults() *MerchantLocationResponse {
	this := MerchantLocationResponse{}
	return &this
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *MerchantLocationResponse) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *MerchantLocationResponse) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *MerchantLocationResponse) UnsetCity() {
	o.City.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *MerchantLocationResponse) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *MerchantLocationResponse) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *MerchantLocationResponse) UnsetCountry() {
	o.Country.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *MerchantLocationResponse) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *MerchantLocationResponse) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *MerchantLocationResponse) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetGuid() string {
	if o == nil || IsNil(o.Guid.Get()) {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *MerchantLocationResponse) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *MerchantLocationResponse) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *MerchantLocationResponse) UnsetGuid() {
	o.Guid.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetLatitude() float32 {
	if o == nil || IsNil(o.Latitude.Get()) {
		var ret float32
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetLatitudeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableFloat32 and assigns it to the Latitude field.
func (o *MerchantLocationResponse) SetLatitude(v float32) {
	o.Latitude.Set(&v)
}
// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *MerchantLocationResponse) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *MerchantLocationResponse) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetLongitude() float32 {
	if o == nil || IsNil(o.Longitude.Get()) {
		var ret float32
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetLongitudeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableFloat32 and assigns it to the Longitude field.
func (o *MerchantLocationResponse) SetLongitude(v float32) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *MerchantLocationResponse) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *MerchantLocationResponse) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetMerchantGuid returns the MerchantGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetMerchantGuid() string {
	if o == nil || IsNil(o.MerchantGuid.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantGuid.Get()
}

// GetMerchantGuidOk returns a tuple with the MerchantGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetMerchantGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantGuid.Get(), o.MerchantGuid.IsSet()
}

// HasMerchantGuid returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasMerchantGuid() bool {
	if o != nil && o.MerchantGuid.IsSet() {
		return true
	}

	return false
}

// SetMerchantGuid gets a reference to the given NullableString and assigns it to the MerchantGuid field.
func (o *MerchantLocationResponse) SetMerchantGuid(v string) {
	o.MerchantGuid.Set(&v)
}
// SetMerchantGuidNil sets the value for MerchantGuid to be an explicit nil
func (o *MerchantLocationResponse) SetMerchantGuidNil() {
	o.MerchantGuid.Set(nil)
}

// UnsetMerchantGuid ensures that no value is present for MerchantGuid, not even an explicit nil
func (o *MerchantLocationResponse) UnsetMerchantGuid() {
	o.MerchantGuid.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *MerchantLocationResponse) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *MerchantLocationResponse) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *MerchantLocationResponse) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *MerchantLocationResponse) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *MerchantLocationResponse) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *MerchantLocationResponse) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *MerchantLocationResponse) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *MerchantLocationResponse) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *MerchantLocationResponse) UnsetState() {
	o.State.Unset()
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetStreetAddress() string {
	if o == nil || IsNil(o.StreetAddress.Get()) {
		var ret string
		return ret
	}
	return *o.StreetAddress.Get()
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetStreetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreetAddress.Get(), o.StreetAddress.IsSet()
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasStreetAddress() bool {
	if o != nil && o.StreetAddress.IsSet() {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given NullableString and assigns it to the StreetAddress field.
func (o *MerchantLocationResponse) SetStreetAddress(v string) {
	o.StreetAddress.Set(&v)
}
// SetStreetAddressNil sets the value for StreetAddress to be an explicit nil
func (o *MerchantLocationResponse) SetStreetAddressNil() {
	o.StreetAddress.Set(nil)
}

// UnsetStreetAddress ensures that no value is present for StreetAddress, not even an explicit nil
func (o *MerchantLocationResponse) UnsetStreetAddress() {
	o.StreetAddress.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantLocationResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantLocationResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MerchantLocationResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *MerchantLocationResponse) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *MerchantLocationResponse) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *MerchantLocationResponse) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o MerchantLocationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantLocationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if o.Latitude.IsSet() {
		toSerialize["latitude"] = o.Latitude.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["longitude"] = o.Longitude.Get()
	}
	if o.MerchantGuid.IsSet() {
		toSerialize["merchant_guid"] = o.MerchantGuid.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phone_number"] = o.PhoneNumber.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["postal_code"] = o.PostalCode.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.StreetAddress.IsSet() {
		toSerialize["street_address"] = o.StreetAddress.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	return toSerialize, nil
}

type NullableMerchantLocationResponse struct {
	value *MerchantLocationResponse
	isSet bool
}

func (v NullableMerchantLocationResponse) Get() *MerchantLocationResponse {
	return v.value
}

func (v *NullableMerchantLocationResponse) Set(val *MerchantLocationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantLocationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantLocationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantLocationResponse(val *MerchantLocationResponse) *NullableMerchantLocationResponse {
	return &NullableMerchantLocationResponse{value: val, isSet: true}
}

func (v NullableMerchantLocationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantLocationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


