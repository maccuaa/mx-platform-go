/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// TaggingResponse struct for TaggingResponse
type TaggingResponse struct {
	Guid NullableString `json:"guid,omitempty"`
	MemberIsManagedByUser NullableBool `json:"member_is_managed_by_user,omitempty"`
	TagGuid NullableString `json:"tag_guid,omitempty"`
	TransactionGuid NullableString `json:"transaction_guid,omitempty"`
	UserGuid NullableString `json:"user_guid,omitempty"`
}

// NewTaggingResponse instantiates a new TaggingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaggingResponse() *TaggingResponse {
	this := TaggingResponse{}
	return &this
}

// NewTaggingResponseWithDefaults instantiates a new TaggingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaggingResponseWithDefaults() *TaggingResponse {
	this := TaggingResponse{}
	return &this
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaggingResponse) GetGuid() string {
	if o == nil || o.Guid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaggingResponse) GetGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *TaggingResponse) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *TaggingResponse) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *TaggingResponse) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *TaggingResponse) UnsetGuid() {
	o.Guid.Unset()
}

// GetMemberIsManagedByUser returns the MemberIsManagedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaggingResponse) GetMemberIsManagedByUser() bool {
	if o == nil || o.MemberIsManagedByUser.Get() == nil {
		var ret bool
		return ret
	}
	return *o.MemberIsManagedByUser.Get()
}

// GetMemberIsManagedByUserOk returns a tuple with the MemberIsManagedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaggingResponse) GetMemberIsManagedByUserOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MemberIsManagedByUser.Get(), o.MemberIsManagedByUser.IsSet()
}

// HasMemberIsManagedByUser returns a boolean if a field has been set.
func (o *TaggingResponse) HasMemberIsManagedByUser() bool {
	if o != nil && o.MemberIsManagedByUser.IsSet() {
		return true
	}

	return false
}

// SetMemberIsManagedByUser gets a reference to the given NullableBool and assigns it to the MemberIsManagedByUser field.
func (o *TaggingResponse) SetMemberIsManagedByUser(v bool) {
	o.MemberIsManagedByUser.Set(&v)
}
// SetMemberIsManagedByUserNil sets the value for MemberIsManagedByUser to be an explicit nil
func (o *TaggingResponse) SetMemberIsManagedByUserNil() {
	o.MemberIsManagedByUser.Set(nil)
}

// UnsetMemberIsManagedByUser ensures that no value is present for MemberIsManagedByUser, not even an explicit nil
func (o *TaggingResponse) UnsetMemberIsManagedByUser() {
	o.MemberIsManagedByUser.Unset()
}

// GetTagGuid returns the TagGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaggingResponse) GetTagGuid() string {
	if o == nil || o.TagGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.TagGuid.Get()
}

// GetTagGuidOk returns a tuple with the TagGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaggingResponse) GetTagGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TagGuid.Get(), o.TagGuid.IsSet()
}

// HasTagGuid returns a boolean if a field has been set.
func (o *TaggingResponse) HasTagGuid() bool {
	if o != nil && o.TagGuid.IsSet() {
		return true
	}

	return false
}

// SetTagGuid gets a reference to the given NullableString and assigns it to the TagGuid field.
func (o *TaggingResponse) SetTagGuid(v string) {
	o.TagGuid.Set(&v)
}
// SetTagGuidNil sets the value for TagGuid to be an explicit nil
func (o *TaggingResponse) SetTagGuidNil() {
	o.TagGuid.Set(nil)
}

// UnsetTagGuid ensures that no value is present for TagGuid, not even an explicit nil
func (o *TaggingResponse) UnsetTagGuid() {
	o.TagGuid.Unset()
}

// GetTransactionGuid returns the TransactionGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaggingResponse) GetTransactionGuid() string {
	if o == nil || o.TransactionGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.TransactionGuid.Get()
}

// GetTransactionGuidOk returns a tuple with the TransactionGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaggingResponse) GetTransactionGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TransactionGuid.Get(), o.TransactionGuid.IsSet()
}

// HasTransactionGuid returns a boolean if a field has been set.
func (o *TaggingResponse) HasTransactionGuid() bool {
	if o != nil && o.TransactionGuid.IsSet() {
		return true
	}

	return false
}

// SetTransactionGuid gets a reference to the given NullableString and assigns it to the TransactionGuid field.
func (o *TaggingResponse) SetTransactionGuid(v string) {
	o.TransactionGuid.Set(&v)
}
// SetTransactionGuidNil sets the value for TransactionGuid to be an explicit nil
func (o *TaggingResponse) SetTransactionGuidNil() {
	o.TransactionGuid.Set(nil)
}

// UnsetTransactionGuid ensures that no value is present for TransactionGuid, not even an explicit nil
func (o *TaggingResponse) UnsetTransactionGuid() {
	o.TransactionGuid.Unset()
}

// GetUserGuid returns the UserGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaggingResponse) GetUserGuid() string {
	if o == nil || o.UserGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserGuid.Get()
}

// GetUserGuidOk returns a tuple with the UserGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaggingResponse) GetUserGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserGuid.Get(), o.UserGuid.IsSet()
}

// HasUserGuid returns a boolean if a field has been set.
func (o *TaggingResponse) HasUserGuid() bool {
	if o != nil && o.UserGuid.IsSet() {
		return true
	}

	return false
}

// SetUserGuid gets a reference to the given NullableString and assigns it to the UserGuid field.
func (o *TaggingResponse) SetUserGuid(v string) {
	o.UserGuid.Set(&v)
}
// SetUserGuidNil sets the value for UserGuid to be an explicit nil
func (o *TaggingResponse) SetUserGuidNil() {
	o.UserGuid.Set(nil)
}

// UnsetUserGuid ensures that no value is present for UserGuid, not even an explicit nil
func (o *TaggingResponse) UnsetUserGuid() {
	o.UserGuid.Unset()
}

func (o TaggingResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if o.MemberIsManagedByUser.IsSet() {
		toSerialize["member_is_managed_by_user"] = o.MemberIsManagedByUser.Get()
	}
	if o.TagGuid.IsSet() {
		toSerialize["tag_guid"] = o.TagGuid.Get()
	}
	if o.TransactionGuid.IsSet() {
		toSerialize["transaction_guid"] = o.TransactionGuid.Get()
	}
	if o.UserGuid.IsSet() {
		toSerialize["user_guid"] = o.UserGuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTaggingResponse struct {
	value *TaggingResponse
	isSet bool
}

func (v NullableTaggingResponse) Get() *TaggingResponse {
	return v.value
}

func (v *NullableTaggingResponse) Set(val *TaggingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTaggingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTaggingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaggingResponse(val *TaggingResponse) *NullableTaggingResponse {
	return &NullableTaggingResponse{value: val, isSet: true}
}

func (v NullableTaggingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaggingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


