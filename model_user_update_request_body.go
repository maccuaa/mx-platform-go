/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// UserUpdateRequestBody struct for UserUpdateRequestBody
type UserUpdateRequestBody struct {
	User *UserUpdateRequest `json:"user,omitempty"`
}

// NewUserUpdateRequestBody instantiates a new UserUpdateRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserUpdateRequestBody() *UserUpdateRequestBody {
	this := UserUpdateRequestBody{}
	return &this
}

// NewUserUpdateRequestBodyWithDefaults instantiates a new UserUpdateRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserUpdateRequestBodyWithDefaults() *UserUpdateRequestBody {
	this := UserUpdateRequestBody{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UserUpdateRequestBody) GetUser() UserUpdateRequest {
	if o == nil || o.User == nil {
		var ret UserUpdateRequest
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateRequestBody) GetUserOk() (*UserUpdateRequest, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UserUpdateRequestBody) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserUpdateRequest and assigns it to the User field.
func (o *UserUpdateRequestBody) SetUser(v UserUpdateRequest) {
	o.User = &v
}

func (o UserUpdateRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableUserUpdateRequestBody struct {
	value *UserUpdateRequestBody
	isSet bool
}

func (v NullableUserUpdateRequestBody) Get() *UserUpdateRequestBody {
	return v.value
}

func (v *NullableUserUpdateRequestBody) Set(val *UserUpdateRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUpdateRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUpdateRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUpdateRequestBody(val *UserUpdateRequestBody) *NullableUserUpdateRequestBody {
	return &NullableUserUpdateRequestBody{value: val, isSet: true}
}

func (v NullableUserUpdateRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUpdateRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


