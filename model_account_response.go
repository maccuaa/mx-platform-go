/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// AccountResponse struct for AccountResponse
type AccountResponse struct {
	AccountNumber NullableString `json:"account_number,omitempty"`
	Apr NullableFloat32 `json:"apr,omitempty"`
	Apy NullableFloat32 `json:"apy,omitempty"`
	AvailableBalance NullableFloat32 `json:"available_balance,omitempty"`
	AvailableCredit NullableFloat32 `json:"available_credit,omitempty"`
	Balance NullableFloat32 `json:"balance,omitempty"`
	CashBalance NullableFloat32 `json:"cash_balance,omitempty"`
	CashSurrenderValue NullableFloat32 `json:"cash_surrender_value,omitempty"`
	CreatedAt NullableString `json:"created_at,omitempty"`
	CreditLimit NullableFloat32 `json:"credit_limit,omitempty"`
	CurrencyCode NullableString `json:"currency_code,omitempty"`
	DayPaymentIsDue NullableInt32 `json:"day_payment_is_due,omitempty"`
	DeathBenefit NullableInt32 `json:"death_benefit,omitempty"`
	Guid *string `json:"guid,omitempty"`
	HoldingsValue NullableFloat32 `json:"holdings_value,omitempty"`
	Id NullableString `json:"id,omitempty"`
	ImportedAt NullableString `json:"imported_at,omitempty"`
	InstitutionCode NullableString `json:"institution_code,omitempty"`
	InsuredName NullableString `json:"insured_name,omitempty"`
	InterestRate NullableFloat32 `json:"interest_rate,omitempty"`
	IsClosed NullableBool `json:"is_closed,omitempty"`
	IsHidden NullableBool `json:"is_hidden,omitempty"`
	LastPayment NullableFloat32 `json:"last_payment,omitempty"`
	LastPaymentAt NullableString `json:"last_payment_at,omitempty"`
	LoanAmount NullableFloat32 `json:"loan_amount,omitempty"`
	MaturesOn NullableString `json:"matures_on,omitempty"`
	MemberGuid *string `json:"member_guid,omitempty"`
	MemberId NullableString `json:"member_id,omitempty"`
	MemberIsManagedByUser NullableBool `json:"member_is_managed_by_user,omitempty"`
	Metadata NullableString `json:"metadata,omitempty"`
	MinimumBalance NullableFloat32 `json:"minimum_balance,omitempty"`
	MinimumPayment NullableFloat32 `json:"minimum_payment,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Nickname NullableString `json:"nickname,omitempty"`
	OriginalBalance NullableFloat32 `json:"original_balance,omitempty"`
	PayOutAmount NullableFloat32 `json:"pay_out_amount,omitempty"`
	PaymentDueAt NullableString `json:"payment_due_at,omitempty"`
	PayoffBalance NullableFloat32 `json:"payoff_balance,omitempty"`
	PremiumAmount NullableFloat32 `json:"premium_amount,omitempty"`
	RoutingNumber NullableString `json:"routing_number,omitempty"`
	StartedOn NullableString `json:"started_on,omitempty"`
	Subtype NullableString `json:"subtype,omitempty"`
	TotalAccountValue NullableFloat32 `json:"total_account_value,omitempty"`
	Type NullableString `json:"type,omitempty"`
	UpdatedAt NullableString `json:"updated_at,omitempty"`
	UserGuid *string `json:"user_guid,omitempty"`
	UserId NullableString `json:"user_id,omitempty"`
}

// NewAccountResponse instantiates a new AccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountResponse() *AccountResponse {
	this := AccountResponse{}
	return &this
}

// NewAccountResponseWithDefaults instantiates a new AccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountResponseWithDefaults() *AccountResponse {
	this := AccountResponse{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetAccountNumber() string {
	if o == nil || o.AccountNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber.Get()
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountNumber.Get(), o.AccountNumber.IsSet()
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *AccountResponse) HasAccountNumber() bool {
	if o != nil && o.AccountNumber.IsSet() {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given NullableString and assigns it to the AccountNumber field.
func (o *AccountResponse) SetAccountNumber(v string) {
	o.AccountNumber.Set(&v)
}
// SetAccountNumberNil sets the value for AccountNumber to be an explicit nil
func (o *AccountResponse) SetAccountNumberNil() {
	o.AccountNumber.Set(nil)
}

// UnsetAccountNumber ensures that no value is present for AccountNumber, not even an explicit nil
func (o *AccountResponse) UnsetAccountNumber() {
	o.AccountNumber.Unset()
}

// GetApr returns the Apr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetApr() float32 {
	if o == nil || o.Apr.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Apr.Get()
}

// GetAprOk returns a tuple with the Apr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetAprOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Apr.Get(), o.Apr.IsSet()
}

// HasApr returns a boolean if a field has been set.
func (o *AccountResponse) HasApr() bool {
	if o != nil && o.Apr.IsSet() {
		return true
	}

	return false
}

// SetApr gets a reference to the given NullableFloat32 and assigns it to the Apr field.
func (o *AccountResponse) SetApr(v float32) {
	o.Apr.Set(&v)
}
// SetAprNil sets the value for Apr to be an explicit nil
func (o *AccountResponse) SetAprNil() {
	o.Apr.Set(nil)
}

// UnsetApr ensures that no value is present for Apr, not even an explicit nil
func (o *AccountResponse) UnsetApr() {
	o.Apr.Unset()
}

// GetApy returns the Apy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetApy() float32 {
	if o == nil || o.Apy.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Apy.Get()
}

// GetApyOk returns a tuple with the Apy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetApyOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Apy.Get(), o.Apy.IsSet()
}

// HasApy returns a boolean if a field has been set.
func (o *AccountResponse) HasApy() bool {
	if o != nil && o.Apy.IsSet() {
		return true
	}

	return false
}

// SetApy gets a reference to the given NullableFloat32 and assigns it to the Apy field.
func (o *AccountResponse) SetApy(v float32) {
	o.Apy.Set(&v)
}
// SetApyNil sets the value for Apy to be an explicit nil
func (o *AccountResponse) SetApyNil() {
	o.Apy.Set(nil)
}

// UnsetApy ensures that no value is present for Apy, not even an explicit nil
func (o *AccountResponse) UnsetApy() {
	o.Apy.Unset()
}

// GetAvailableBalance returns the AvailableBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetAvailableBalance() float32 {
	if o == nil || o.AvailableBalance.Get() == nil {
		var ret float32
		return ret
	}
	return *o.AvailableBalance.Get()
}

// GetAvailableBalanceOk returns a tuple with the AvailableBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetAvailableBalanceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AvailableBalance.Get(), o.AvailableBalance.IsSet()
}

// HasAvailableBalance returns a boolean if a field has been set.
func (o *AccountResponse) HasAvailableBalance() bool {
	if o != nil && o.AvailableBalance.IsSet() {
		return true
	}

	return false
}

// SetAvailableBalance gets a reference to the given NullableFloat32 and assigns it to the AvailableBalance field.
func (o *AccountResponse) SetAvailableBalance(v float32) {
	o.AvailableBalance.Set(&v)
}
// SetAvailableBalanceNil sets the value for AvailableBalance to be an explicit nil
func (o *AccountResponse) SetAvailableBalanceNil() {
	o.AvailableBalance.Set(nil)
}

// UnsetAvailableBalance ensures that no value is present for AvailableBalance, not even an explicit nil
func (o *AccountResponse) UnsetAvailableBalance() {
	o.AvailableBalance.Unset()
}

// GetAvailableCredit returns the AvailableCredit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetAvailableCredit() float32 {
	if o == nil || o.AvailableCredit.Get() == nil {
		var ret float32
		return ret
	}
	return *o.AvailableCredit.Get()
}

// GetAvailableCreditOk returns a tuple with the AvailableCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetAvailableCreditOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AvailableCredit.Get(), o.AvailableCredit.IsSet()
}

// HasAvailableCredit returns a boolean if a field has been set.
func (o *AccountResponse) HasAvailableCredit() bool {
	if o != nil && o.AvailableCredit.IsSet() {
		return true
	}

	return false
}

// SetAvailableCredit gets a reference to the given NullableFloat32 and assigns it to the AvailableCredit field.
func (o *AccountResponse) SetAvailableCredit(v float32) {
	o.AvailableCredit.Set(&v)
}
// SetAvailableCreditNil sets the value for AvailableCredit to be an explicit nil
func (o *AccountResponse) SetAvailableCreditNil() {
	o.AvailableCredit.Set(nil)
}

// UnsetAvailableCredit ensures that no value is present for AvailableCredit, not even an explicit nil
func (o *AccountResponse) UnsetAvailableCredit() {
	o.AvailableCredit.Unset()
}

// GetBalance returns the Balance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetBalance() float32 {
	if o == nil || o.Balance.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Balance.Get()
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetBalanceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Balance.Get(), o.Balance.IsSet()
}

// HasBalance returns a boolean if a field has been set.
func (o *AccountResponse) HasBalance() bool {
	if o != nil && o.Balance.IsSet() {
		return true
	}

	return false
}

// SetBalance gets a reference to the given NullableFloat32 and assigns it to the Balance field.
func (o *AccountResponse) SetBalance(v float32) {
	o.Balance.Set(&v)
}
// SetBalanceNil sets the value for Balance to be an explicit nil
func (o *AccountResponse) SetBalanceNil() {
	o.Balance.Set(nil)
}

// UnsetBalance ensures that no value is present for Balance, not even an explicit nil
func (o *AccountResponse) UnsetBalance() {
	o.Balance.Unset()
}

// GetCashBalance returns the CashBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetCashBalance() float32 {
	if o == nil || o.CashBalance.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CashBalance.Get()
}

// GetCashBalanceOk returns a tuple with the CashBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetCashBalanceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CashBalance.Get(), o.CashBalance.IsSet()
}

// HasCashBalance returns a boolean if a field has been set.
func (o *AccountResponse) HasCashBalance() bool {
	if o != nil && o.CashBalance.IsSet() {
		return true
	}

	return false
}

// SetCashBalance gets a reference to the given NullableFloat32 and assigns it to the CashBalance field.
func (o *AccountResponse) SetCashBalance(v float32) {
	o.CashBalance.Set(&v)
}
// SetCashBalanceNil sets the value for CashBalance to be an explicit nil
func (o *AccountResponse) SetCashBalanceNil() {
	o.CashBalance.Set(nil)
}

// UnsetCashBalance ensures that no value is present for CashBalance, not even an explicit nil
func (o *AccountResponse) UnsetCashBalance() {
	o.CashBalance.Unset()
}

// GetCashSurrenderValue returns the CashSurrenderValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetCashSurrenderValue() float32 {
	if o == nil || o.CashSurrenderValue.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CashSurrenderValue.Get()
}

// GetCashSurrenderValueOk returns a tuple with the CashSurrenderValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetCashSurrenderValueOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CashSurrenderValue.Get(), o.CashSurrenderValue.IsSet()
}

// HasCashSurrenderValue returns a boolean if a field has been set.
func (o *AccountResponse) HasCashSurrenderValue() bool {
	if o != nil && o.CashSurrenderValue.IsSet() {
		return true
	}

	return false
}

// SetCashSurrenderValue gets a reference to the given NullableFloat32 and assigns it to the CashSurrenderValue field.
func (o *AccountResponse) SetCashSurrenderValue(v float32) {
	o.CashSurrenderValue.Set(&v)
}
// SetCashSurrenderValueNil sets the value for CashSurrenderValue to be an explicit nil
func (o *AccountResponse) SetCashSurrenderValueNil() {
	o.CashSurrenderValue.Set(nil)
}

// UnsetCashSurrenderValue ensures that no value is present for CashSurrenderValue, not even an explicit nil
func (o *AccountResponse) UnsetCashSurrenderValue() {
	o.CashSurrenderValue.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AccountResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *AccountResponse) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *AccountResponse) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *AccountResponse) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetCreditLimit() float32 {
	if o == nil || o.CreditLimit.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CreditLimit.Get()
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetCreditLimitOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreditLimit.Get(), o.CreditLimit.IsSet()
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *AccountResponse) HasCreditLimit() bool {
	if o != nil && o.CreditLimit.IsSet() {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given NullableFloat32 and assigns it to the CreditLimit field.
func (o *AccountResponse) SetCreditLimit(v float32) {
	o.CreditLimit.Set(&v)
}
// SetCreditLimitNil sets the value for CreditLimit to be an explicit nil
func (o *AccountResponse) SetCreditLimitNil() {
	o.CreditLimit.Set(nil)
}

// UnsetCreditLimit ensures that no value is present for CreditLimit, not even an explicit nil
func (o *AccountResponse) UnsetCreditLimit() {
	o.CreditLimit.Unset()
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode.Get()
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CurrencyCode.Get(), o.CurrencyCode.IsSet()
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *AccountResponse) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given NullableString and assigns it to the CurrencyCode field.
func (o *AccountResponse) SetCurrencyCode(v string) {
	o.CurrencyCode.Set(&v)
}
// SetCurrencyCodeNil sets the value for CurrencyCode to be an explicit nil
func (o *AccountResponse) SetCurrencyCodeNil() {
	o.CurrencyCode.Set(nil)
}

// UnsetCurrencyCode ensures that no value is present for CurrencyCode, not even an explicit nil
func (o *AccountResponse) UnsetCurrencyCode() {
	o.CurrencyCode.Unset()
}

// GetDayPaymentIsDue returns the DayPaymentIsDue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetDayPaymentIsDue() int32 {
	if o == nil || o.DayPaymentIsDue.Get() == nil {
		var ret int32
		return ret
	}
	return *o.DayPaymentIsDue.Get()
}

// GetDayPaymentIsDueOk returns a tuple with the DayPaymentIsDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetDayPaymentIsDueOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DayPaymentIsDue.Get(), o.DayPaymentIsDue.IsSet()
}

// HasDayPaymentIsDue returns a boolean if a field has been set.
func (o *AccountResponse) HasDayPaymentIsDue() bool {
	if o != nil && o.DayPaymentIsDue.IsSet() {
		return true
	}

	return false
}

// SetDayPaymentIsDue gets a reference to the given NullableInt32 and assigns it to the DayPaymentIsDue field.
func (o *AccountResponse) SetDayPaymentIsDue(v int32) {
	o.DayPaymentIsDue.Set(&v)
}
// SetDayPaymentIsDueNil sets the value for DayPaymentIsDue to be an explicit nil
func (o *AccountResponse) SetDayPaymentIsDueNil() {
	o.DayPaymentIsDue.Set(nil)
}

// UnsetDayPaymentIsDue ensures that no value is present for DayPaymentIsDue, not even an explicit nil
func (o *AccountResponse) UnsetDayPaymentIsDue() {
	o.DayPaymentIsDue.Unset()
}

// GetDeathBenefit returns the DeathBenefit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetDeathBenefit() int32 {
	if o == nil || o.DeathBenefit.Get() == nil {
		var ret int32
		return ret
	}
	return *o.DeathBenefit.Get()
}

// GetDeathBenefitOk returns a tuple with the DeathBenefit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetDeathBenefitOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeathBenefit.Get(), o.DeathBenefit.IsSet()
}

// HasDeathBenefit returns a boolean if a field has been set.
func (o *AccountResponse) HasDeathBenefit() bool {
	if o != nil && o.DeathBenefit.IsSet() {
		return true
	}

	return false
}

// SetDeathBenefit gets a reference to the given NullableInt32 and assigns it to the DeathBenefit field.
func (o *AccountResponse) SetDeathBenefit(v int32) {
	o.DeathBenefit.Set(&v)
}
// SetDeathBenefitNil sets the value for DeathBenefit to be an explicit nil
func (o *AccountResponse) SetDeathBenefitNil() {
	o.DeathBenefit.Set(nil)
}

// UnsetDeathBenefit ensures that no value is present for DeathBenefit, not even an explicit nil
func (o *AccountResponse) UnsetDeathBenefit() {
	o.DeathBenefit.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *AccountResponse) GetGuid() string {
	if o == nil || o.Guid == nil {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetGuidOk() (*string, bool) {
	if o == nil || o.Guid == nil {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *AccountResponse) HasGuid() bool {
	if o != nil && o.Guid != nil {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *AccountResponse) SetGuid(v string) {
	o.Guid = &v
}

// GetHoldingsValue returns the HoldingsValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetHoldingsValue() float32 {
	if o == nil || o.HoldingsValue.Get() == nil {
		var ret float32
		return ret
	}
	return *o.HoldingsValue.Get()
}

// GetHoldingsValueOk returns a tuple with the HoldingsValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetHoldingsValueOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HoldingsValue.Get(), o.HoldingsValue.IsSet()
}

// HasHoldingsValue returns a boolean if a field has been set.
func (o *AccountResponse) HasHoldingsValue() bool {
	if o != nil && o.HoldingsValue.IsSet() {
		return true
	}

	return false
}

// SetHoldingsValue gets a reference to the given NullableFloat32 and assigns it to the HoldingsValue field.
func (o *AccountResponse) SetHoldingsValue(v float32) {
	o.HoldingsValue.Set(&v)
}
// SetHoldingsValueNil sets the value for HoldingsValue to be an explicit nil
func (o *AccountResponse) SetHoldingsValueNil() {
	o.HoldingsValue.Set(nil)
}

// UnsetHoldingsValue ensures that no value is present for HoldingsValue, not even an explicit nil
func (o *AccountResponse) UnsetHoldingsValue() {
	o.HoldingsValue.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *AccountResponse) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *AccountResponse) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *AccountResponse) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *AccountResponse) UnsetId() {
	o.Id.Unset()
}

// GetImportedAt returns the ImportedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetImportedAt() string {
	if o == nil || o.ImportedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImportedAt.Get()
}

// GetImportedAtOk returns a tuple with the ImportedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetImportedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ImportedAt.Get(), o.ImportedAt.IsSet()
}

// HasImportedAt returns a boolean if a field has been set.
func (o *AccountResponse) HasImportedAt() bool {
	if o != nil && o.ImportedAt.IsSet() {
		return true
	}

	return false
}

// SetImportedAt gets a reference to the given NullableString and assigns it to the ImportedAt field.
func (o *AccountResponse) SetImportedAt(v string) {
	o.ImportedAt.Set(&v)
}
// SetImportedAtNil sets the value for ImportedAt to be an explicit nil
func (o *AccountResponse) SetImportedAtNil() {
	o.ImportedAt.Set(nil)
}

// UnsetImportedAt ensures that no value is present for ImportedAt, not even an explicit nil
func (o *AccountResponse) UnsetImportedAt() {
	o.ImportedAt.Unset()
}

// GetInstitutionCode returns the InstitutionCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetInstitutionCode() string {
	if o == nil || o.InstitutionCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.InstitutionCode.Get()
}

// GetInstitutionCodeOk returns a tuple with the InstitutionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetInstitutionCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InstitutionCode.Get(), o.InstitutionCode.IsSet()
}

// HasInstitutionCode returns a boolean if a field has been set.
func (o *AccountResponse) HasInstitutionCode() bool {
	if o != nil && o.InstitutionCode.IsSet() {
		return true
	}

	return false
}

// SetInstitutionCode gets a reference to the given NullableString and assigns it to the InstitutionCode field.
func (o *AccountResponse) SetInstitutionCode(v string) {
	o.InstitutionCode.Set(&v)
}
// SetInstitutionCodeNil sets the value for InstitutionCode to be an explicit nil
func (o *AccountResponse) SetInstitutionCodeNil() {
	o.InstitutionCode.Set(nil)
}

// UnsetInstitutionCode ensures that no value is present for InstitutionCode, not even an explicit nil
func (o *AccountResponse) UnsetInstitutionCode() {
	o.InstitutionCode.Unset()
}

// GetInsuredName returns the InsuredName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetInsuredName() string {
	if o == nil || o.InsuredName.Get() == nil {
		var ret string
		return ret
	}
	return *o.InsuredName.Get()
}

// GetInsuredNameOk returns a tuple with the InsuredName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetInsuredNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InsuredName.Get(), o.InsuredName.IsSet()
}

// HasInsuredName returns a boolean if a field has been set.
func (o *AccountResponse) HasInsuredName() bool {
	if o != nil && o.InsuredName.IsSet() {
		return true
	}

	return false
}

// SetInsuredName gets a reference to the given NullableString and assigns it to the InsuredName field.
func (o *AccountResponse) SetInsuredName(v string) {
	o.InsuredName.Set(&v)
}
// SetInsuredNameNil sets the value for InsuredName to be an explicit nil
func (o *AccountResponse) SetInsuredNameNil() {
	o.InsuredName.Set(nil)
}

// UnsetInsuredName ensures that no value is present for InsuredName, not even an explicit nil
func (o *AccountResponse) UnsetInsuredName() {
	o.InsuredName.Unset()
}

// GetInterestRate returns the InterestRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetInterestRate() float32 {
	if o == nil || o.InterestRate.Get() == nil {
		var ret float32
		return ret
	}
	return *o.InterestRate.Get()
}

// GetInterestRateOk returns a tuple with the InterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetInterestRateOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InterestRate.Get(), o.InterestRate.IsSet()
}

// HasInterestRate returns a boolean if a field has been set.
func (o *AccountResponse) HasInterestRate() bool {
	if o != nil && o.InterestRate.IsSet() {
		return true
	}

	return false
}

// SetInterestRate gets a reference to the given NullableFloat32 and assigns it to the InterestRate field.
func (o *AccountResponse) SetInterestRate(v float32) {
	o.InterestRate.Set(&v)
}
// SetInterestRateNil sets the value for InterestRate to be an explicit nil
func (o *AccountResponse) SetInterestRateNil() {
	o.InterestRate.Set(nil)
}

// UnsetInterestRate ensures that no value is present for InterestRate, not even an explicit nil
func (o *AccountResponse) UnsetInterestRate() {
	o.InterestRate.Unset()
}

// GetIsClosed returns the IsClosed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetIsClosed() bool {
	if o == nil || o.IsClosed.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsClosed.Get()
}

// GetIsClosedOk returns a tuple with the IsClosed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetIsClosedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsClosed.Get(), o.IsClosed.IsSet()
}

// HasIsClosed returns a boolean if a field has been set.
func (o *AccountResponse) HasIsClosed() bool {
	if o != nil && o.IsClosed.IsSet() {
		return true
	}

	return false
}

// SetIsClosed gets a reference to the given NullableBool and assigns it to the IsClosed field.
func (o *AccountResponse) SetIsClosed(v bool) {
	o.IsClosed.Set(&v)
}
// SetIsClosedNil sets the value for IsClosed to be an explicit nil
func (o *AccountResponse) SetIsClosedNil() {
	o.IsClosed.Set(nil)
}

// UnsetIsClosed ensures that no value is present for IsClosed, not even an explicit nil
func (o *AccountResponse) UnsetIsClosed() {
	o.IsClosed.Unset()
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetIsHidden() bool {
	if o == nil || o.IsHidden.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsHidden.Get()
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetIsHiddenOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsHidden.Get(), o.IsHidden.IsSet()
}

// HasIsHidden returns a boolean if a field has been set.
func (o *AccountResponse) HasIsHidden() bool {
	if o != nil && o.IsHidden.IsSet() {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given NullableBool and assigns it to the IsHidden field.
func (o *AccountResponse) SetIsHidden(v bool) {
	o.IsHidden.Set(&v)
}
// SetIsHiddenNil sets the value for IsHidden to be an explicit nil
func (o *AccountResponse) SetIsHiddenNil() {
	o.IsHidden.Set(nil)
}

// UnsetIsHidden ensures that no value is present for IsHidden, not even an explicit nil
func (o *AccountResponse) UnsetIsHidden() {
	o.IsHidden.Unset()
}

// GetLastPayment returns the LastPayment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetLastPayment() float32 {
	if o == nil || o.LastPayment.Get() == nil {
		var ret float32
		return ret
	}
	return *o.LastPayment.Get()
}

// GetLastPaymentOk returns a tuple with the LastPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetLastPaymentOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastPayment.Get(), o.LastPayment.IsSet()
}

// HasLastPayment returns a boolean if a field has been set.
func (o *AccountResponse) HasLastPayment() bool {
	if o != nil && o.LastPayment.IsSet() {
		return true
	}

	return false
}

// SetLastPayment gets a reference to the given NullableFloat32 and assigns it to the LastPayment field.
func (o *AccountResponse) SetLastPayment(v float32) {
	o.LastPayment.Set(&v)
}
// SetLastPaymentNil sets the value for LastPayment to be an explicit nil
func (o *AccountResponse) SetLastPaymentNil() {
	o.LastPayment.Set(nil)
}

// UnsetLastPayment ensures that no value is present for LastPayment, not even an explicit nil
func (o *AccountResponse) UnsetLastPayment() {
	o.LastPayment.Unset()
}

// GetLastPaymentAt returns the LastPaymentAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetLastPaymentAt() string {
	if o == nil || o.LastPaymentAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastPaymentAt.Get()
}

// GetLastPaymentAtOk returns a tuple with the LastPaymentAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetLastPaymentAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastPaymentAt.Get(), o.LastPaymentAt.IsSet()
}

// HasLastPaymentAt returns a boolean if a field has been set.
func (o *AccountResponse) HasLastPaymentAt() bool {
	if o != nil && o.LastPaymentAt.IsSet() {
		return true
	}

	return false
}

// SetLastPaymentAt gets a reference to the given NullableString and assigns it to the LastPaymentAt field.
func (o *AccountResponse) SetLastPaymentAt(v string) {
	o.LastPaymentAt.Set(&v)
}
// SetLastPaymentAtNil sets the value for LastPaymentAt to be an explicit nil
func (o *AccountResponse) SetLastPaymentAtNil() {
	o.LastPaymentAt.Set(nil)
}

// UnsetLastPaymentAt ensures that no value is present for LastPaymentAt, not even an explicit nil
func (o *AccountResponse) UnsetLastPaymentAt() {
	o.LastPaymentAt.Unset()
}

// GetLoanAmount returns the LoanAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetLoanAmount() float32 {
	if o == nil || o.LoanAmount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.LoanAmount.Get()
}

// GetLoanAmountOk returns a tuple with the LoanAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetLoanAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LoanAmount.Get(), o.LoanAmount.IsSet()
}

// HasLoanAmount returns a boolean if a field has been set.
func (o *AccountResponse) HasLoanAmount() bool {
	if o != nil && o.LoanAmount.IsSet() {
		return true
	}

	return false
}

// SetLoanAmount gets a reference to the given NullableFloat32 and assigns it to the LoanAmount field.
func (o *AccountResponse) SetLoanAmount(v float32) {
	o.LoanAmount.Set(&v)
}
// SetLoanAmountNil sets the value for LoanAmount to be an explicit nil
func (o *AccountResponse) SetLoanAmountNil() {
	o.LoanAmount.Set(nil)
}

// UnsetLoanAmount ensures that no value is present for LoanAmount, not even an explicit nil
func (o *AccountResponse) UnsetLoanAmount() {
	o.LoanAmount.Unset()
}

// GetMaturesOn returns the MaturesOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetMaturesOn() string {
	if o == nil || o.MaturesOn.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaturesOn.Get()
}

// GetMaturesOnOk returns a tuple with the MaturesOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetMaturesOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaturesOn.Get(), o.MaturesOn.IsSet()
}

// HasMaturesOn returns a boolean if a field has been set.
func (o *AccountResponse) HasMaturesOn() bool {
	if o != nil && o.MaturesOn.IsSet() {
		return true
	}

	return false
}

// SetMaturesOn gets a reference to the given NullableString and assigns it to the MaturesOn field.
func (o *AccountResponse) SetMaturesOn(v string) {
	o.MaturesOn.Set(&v)
}
// SetMaturesOnNil sets the value for MaturesOn to be an explicit nil
func (o *AccountResponse) SetMaturesOnNil() {
	o.MaturesOn.Set(nil)
}

// UnsetMaturesOn ensures that no value is present for MaturesOn, not even an explicit nil
func (o *AccountResponse) UnsetMaturesOn() {
	o.MaturesOn.Unset()
}

// GetMemberGuid returns the MemberGuid field value if set, zero value otherwise.
func (o *AccountResponse) GetMemberGuid() string {
	if o == nil || o.MemberGuid == nil {
		var ret string
		return ret
	}
	return *o.MemberGuid
}

// GetMemberGuidOk returns a tuple with the MemberGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetMemberGuidOk() (*string, bool) {
	if o == nil || o.MemberGuid == nil {
		return nil, false
	}
	return o.MemberGuid, true
}

// HasMemberGuid returns a boolean if a field has been set.
func (o *AccountResponse) HasMemberGuid() bool {
	if o != nil && o.MemberGuid != nil {
		return true
	}

	return false
}

// SetMemberGuid gets a reference to the given string and assigns it to the MemberGuid field.
func (o *AccountResponse) SetMemberGuid(v string) {
	o.MemberGuid = &v
}

// GetMemberId returns the MemberId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetMemberId() string {
	if o == nil || o.MemberId.Get() == nil {
		var ret string
		return ret
	}
	return *o.MemberId.Get()
}

// GetMemberIdOk returns a tuple with the MemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetMemberIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MemberId.Get(), o.MemberId.IsSet()
}

// HasMemberId returns a boolean if a field has been set.
func (o *AccountResponse) HasMemberId() bool {
	if o != nil && o.MemberId.IsSet() {
		return true
	}

	return false
}

// SetMemberId gets a reference to the given NullableString and assigns it to the MemberId field.
func (o *AccountResponse) SetMemberId(v string) {
	o.MemberId.Set(&v)
}
// SetMemberIdNil sets the value for MemberId to be an explicit nil
func (o *AccountResponse) SetMemberIdNil() {
	o.MemberId.Set(nil)
}

// UnsetMemberId ensures that no value is present for MemberId, not even an explicit nil
func (o *AccountResponse) UnsetMemberId() {
	o.MemberId.Unset()
}

// GetMemberIsManagedByUser returns the MemberIsManagedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetMemberIsManagedByUser() bool {
	if o == nil || o.MemberIsManagedByUser.Get() == nil {
		var ret bool
		return ret
	}
	return *o.MemberIsManagedByUser.Get()
}

// GetMemberIsManagedByUserOk returns a tuple with the MemberIsManagedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetMemberIsManagedByUserOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MemberIsManagedByUser.Get(), o.MemberIsManagedByUser.IsSet()
}

// HasMemberIsManagedByUser returns a boolean if a field has been set.
func (o *AccountResponse) HasMemberIsManagedByUser() bool {
	if o != nil && o.MemberIsManagedByUser.IsSet() {
		return true
	}

	return false
}

// SetMemberIsManagedByUser gets a reference to the given NullableBool and assigns it to the MemberIsManagedByUser field.
func (o *AccountResponse) SetMemberIsManagedByUser(v bool) {
	o.MemberIsManagedByUser.Set(&v)
}
// SetMemberIsManagedByUserNil sets the value for MemberIsManagedByUser to be an explicit nil
func (o *AccountResponse) SetMemberIsManagedByUserNil() {
	o.MemberIsManagedByUser.Set(nil)
}

// UnsetMemberIsManagedByUser ensures that no value is present for MemberIsManagedByUser, not even an explicit nil
func (o *AccountResponse) UnsetMemberIsManagedByUser() {
	o.MemberIsManagedByUser.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetMetadata() string {
	if o == nil || o.Metadata.Get() == nil {
		var ret string
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetMetadataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *AccountResponse) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableString and assigns it to the Metadata field.
func (o *AccountResponse) SetMetadata(v string) {
	o.Metadata.Set(&v)
}
// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *AccountResponse) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *AccountResponse) UnsetMetadata() {
	o.Metadata.Unset()
}

// GetMinimumBalance returns the MinimumBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetMinimumBalance() float32 {
	if o == nil || o.MinimumBalance.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MinimumBalance.Get()
}

// GetMinimumBalanceOk returns a tuple with the MinimumBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetMinimumBalanceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumBalance.Get(), o.MinimumBalance.IsSet()
}

// HasMinimumBalance returns a boolean if a field has been set.
func (o *AccountResponse) HasMinimumBalance() bool {
	if o != nil && o.MinimumBalance.IsSet() {
		return true
	}

	return false
}

// SetMinimumBalance gets a reference to the given NullableFloat32 and assigns it to the MinimumBalance field.
func (o *AccountResponse) SetMinimumBalance(v float32) {
	o.MinimumBalance.Set(&v)
}
// SetMinimumBalanceNil sets the value for MinimumBalance to be an explicit nil
func (o *AccountResponse) SetMinimumBalanceNil() {
	o.MinimumBalance.Set(nil)
}

// UnsetMinimumBalance ensures that no value is present for MinimumBalance, not even an explicit nil
func (o *AccountResponse) UnsetMinimumBalance() {
	o.MinimumBalance.Unset()
}

// GetMinimumPayment returns the MinimumPayment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetMinimumPayment() float32 {
	if o == nil || o.MinimumPayment.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MinimumPayment.Get()
}

// GetMinimumPaymentOk returns a tuple with the MinimumPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetMinimumPaymentOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumPayment.Get(), o.MinimumPayment.IsSet()
}

// HasMinimumPayment returns a boolean if a field has been set.
func (o *AccountResponse) HasMinimumPayment() bool {
	if o != nil && o.MinimumPayment.IsSet() {
		return true
	}

	return false
}

// SetMinimumPayment gets a reference to the given NullableFloat32 and assigns it to the MinimumPayment field.
func (o *AccountResponse) SetMinimumPayment(v float32) {
	o.MinimumPayment.Set(&v)
}
// SetMinimumPaymentNil sets the value for MinimumPayment to be an explicit nil
func (o *AccountResponse) SetMinimumPaymentNil() {
	o.MinimumPayment.Set(nil)
}

// UnsetMinimumPayment ensures that no value is present for MinimumPayment, not even an explicit nil
func (o *AccountResponse) UnsetMinimumPayment() {
	o.MinimumPayment.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AccountResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AccountResponse) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AccountResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AccountResponse) UnsetName() {
	o.Name.Unset()
}

// GetNickname returns the Nickname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetNickname() string {
	if o == nil || o.Nickname.Get() == nil {
		var ret string
		return ret
	}
	return *o.Nickname.Get()
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetNicknameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Nickname.Get(), o.Nickname.IsSet()
}

// HasNickname returns a boolean if a field has been set.
func (o *AccountResponse) HasNickname() bool {
	if o != nil && o.Nickname.IsSet() {
		return true
	}

	return false
}

// SetNickname gets a reference to the given NullableString and assigns it to the Nickname field.
func (o *AccountResponse) SetNickname(v string) {
	o.Nickname.Set(&v)
}
// SetNicknameNil sets the value for Nickname to be an explicit nil
func (o *AccountResponse) SetNicknameNil() {
	o.Nickname.Set(nil)
}

// UnsetNickname ensures that no value is present for Nickname, not even an explicit nil
func (o *AccountResponse) UnsetNickname() {
	o.Nickname.Unset()
}

// GetOriginalBalance returns the OriginalBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetOriginalBalance() float32 {
	if o == nil || o.OriginalBalance.Get() == nil {
		var ret float32
		return ret
	}
	return *o.OriginalBalance.Get()
}

// GetOriginalBalanceOk returns a tuple with the OriginalBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetOriginalBalanceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OriginalBalance.Get(), o.OriginalBalance.IsSet()
}

// HasOriginalBalance returns a boolean if a field has been set.
func (o *AccountResponse) HasOriginalBalance() bool {
	if o != nil && o.OriginalBalance.IsSet() {
		return true
	}

	return false
}

// SetOriginalBalance gets a reference to the given NullableFloat32 and assigns it to the OriginalBalance field.
func (o *AccountResponse) SetOriginalBalance(v float32) {
	o.OriginalBalance.Set(&v)
}
// SetOriginalBalanceNil sets the value for OriginalBalance to be an explicit nil
func (o *AccountResponse) SetOriginalBalanceNil() {
	o.OriginalBalance.Set(nil)
}

// UnsetOriginalBalance ensures that no value is present for OriginalBalance, not even an explicit nil
func (o *AccountResponse) UnsetOriginalBalance() {
	o.OriginalBalance.Unset()
}

// GetPayOutAmount returns the PayOutAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetPayOutAmount() float32 {
	if o == nil || o.PayOutAmount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PayOutAmount.Get()
}

// GetPayOutAmountOk returns a tuple with the PayOutAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetPayOutAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PayOutAmount.Get(), o.PayOutAmount.IsSet()
}

// HasPayOutAmount returns a boolean if a field has been set.
func (o *AccountResponse) HasPayOutAmount() bool {
	if o != nil && o.PayOutAmount.IsSet() {
		return true
	}

	return false
}

// SetPayOutAmount gets a reference to the given NullableFloat32 and assigns it to the PayOutAmount field.
func (o *AccountResponse) SetPayOutAmount(v float32) {
	o.PayOutAmount.Set(&v)
}
// SetPayOutAmountNil sets the value for PayOutAmount to be an explicit nil
func (o *AccountResponse) SetPayOutAmountNil() {
	o.PayOutAmount.Set(nil)
}

// UnsetPayOutAmount ensures that no value is present for PayOutAmount, not even an explicit nil
func (o *AccountResponse) UnsetPayOutAmount() {
	o.PayOutAmount.Unset()
}

// GetPaymentDueAt returns the PaymentDueAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetPaymentDueAt() string {
	if o == nil || o.PaymentDueAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.PaymentDueAt.Get()
}

// GetPaymentDueAtOk returns a tuple with the PaymentDueAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetPaymentDueAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PaymentDueAt.Get(), o.PaymentDueAt.IsSet()
}

// HasPaymentDueAt returns a boolean if a field has been set.
func (o *AccountResponse) HasPaymentDueAt() bool {
	if o != nil && o.PaymentDueAt.IsSet() {
		return true
	}

	return false
}

// SetPaymentDueAt gets a reference to the given NullableString and assigns it to the PaymentDueAt field.
func (o *AccountResponse) SetPaymentDueAt(v string) {
	o.PaymentDueAt.Set(&v)
}
// SetPaymentDueAtNil sets the value for PaymentDueAt to be an explicit nil
func (o *AccountResponse) SetPaymentDueAtNil() {
	o.PaymentDueAt.Set(nil)
}

// UnsetPaymentDueAt ensures that no value is present for PaymentDueAt, not even an explicit nil
func (o *AccountResponse) UnsetPaymentDueAt() {
	o.PaymentDueAt.Unset()
}

// GetPayoffBalance returns the PayoffBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetPayoffBalance() float32 {
	if o == nil || o.PayoffBalance.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PayoffBalance.Get()
}

// GetPayoffBalanceOk returns a tuple with the PayoffBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetPayoffBalanceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PayoffBalance.Get(), o.PayoffBalance.IsSet()
}

// HasPayoffBalance returns a boolean if a field has been set.
func (o *AccountResponse) HasPayoffBalance() bool {
	if o != nil && o.PayoffBalance.IsSet() {
		return true
	}

	return false
}

// SetPayoffBalance gets a reference to the given NullableFloat32 and assigns it to the PayoffBalance field.
func (o *AccountResponse) SetPayoffBalance(v float32) {
	o.PayoffBalance.Set(&v)
}
// SetPayoffBalanceNil sets the value for PayoffBalance to be an explicit nil
func (o *AccountResponse) SetPayoffBalanceNil() {
	o.PayoffBalance.Set(nil)
}

// UnsetPayoffBalance ensures that no value is present for PayoffBalance, not even an explicit nil
func (o *AccountResponse) UnsetPayoffBalance() {
	o.PayoffBalance.Unset()
}

// GetPremiumAmount returns the PremiumAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetPremiumAmount() float32 {
	if o == nil || o.PremiumAmount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PremiumAmount.Get()
}

// GetPremiumAmountOk returns a tuple with the PremiumAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetPremiumAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PremiumAmount.Get(), o.PremiumAmount.IsSet()
}

// HasPremiumAmount returns a boolean if a field has been set.
func (o *AccountResponse) HasPremiumAmount() bool {
	if o != nil && o.PremiumAmount.IsSet() {
		return true
	}

	return false
}

// SetPremiumAmount gets a reference to the given NullableFloat32 and assigns it to the PremiumAmount field.
func (o *AccountResponse) SetPremiumAmount(v float32) {
	o.PremiumAmount.Set(&v)
}
// SetPremiumAmountNil sets the value for PremiumAmount to be an explicit nil
func (o *AccountResponse) SetPremiumAmountNil() {
	o.PremiumAmount.Set(nil)
}

// UnsetPremiumAmount ensures that no value is present for PremiumAmount, not even an explicit nil
func (o *AccountResponse) UnsetPremiumAmount() {
	o.PremiumAmount.Unset()
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetRoutingNumber() string {
	if o == nil || o.RoutingNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.RoutingNumber.Get()
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetRoutingNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RoutingNumber.Get(), o.RoutingNumber.IsSet()
}

// HasRoutingNumber returns a boolean if a field has been set.
func (o *AccountResponse) HasRoutingNumber() bool {
	if o != nil && o.RoutingNumber.IsSet() {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given NullableString and assigns it to the RoutingNumber field.
func (o *AccountResponse) SetRoutingNumber(v string) {
	o.RoutingNumber.Set(&v)
}
// SetRoutingNumberNil sets the value for RoutingNumber to be an explicit nil
func (o *AccountResponse) SetRoutingNumberNil() {
	o.RoutingNumber.Set(nil)
}

// UnsetRoutingNumber ensures that no value is present for RoutingNumber, not even an explicit nil
func (o *AccountResponse) UnsetRoutingNumber() {
	o.RoutingNumber.Unset()
}

// GetStartedOn returns the StartedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetStartedOn() string {
	if o == nil || o.StartedOn.Get() == nil {
		var ret string
		return ret
	}
	return *o.StartedOn.Get()
}

// GetStartedOnOk returns a tuple with the StartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetStartedOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartedOn.Get(), o.StartedOn.IsSet()
}

// HasStartedOn returns a boolean if a field has been set.
func (o *AccountResponse) HasStartedOn() bool {
	if o != nil && o.StartedOn.IsSet() {
		return true
	}

	return false
}

// SetStartedOn gets a reference to the given NullableString and assigns it to the StartedOn field.
func (o *AccountResponse) SetStartedOn(v string) {
	o.StartedOn.Set(&v)
}
// SetStartedOnNil sets the value for StartedOn to be an explicit nil
func (o *AccountResponse) SetStartedOnNil() {
	o.StartedOn.Set(nil)
}

// UnsetStartedOn ensures that no value is present for StartedOn, not even an explicit nil
func (o *AccountResponse) UnsetStartedOn() {
	o.StartedOn.Unset()
}

// GetSubtype returns the Subtype field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetSubtype() string {
	if o == nil || o.Subtype.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subtype.Get()
}

// GetSubtypeOk returns a tuple with the Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetSubtypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subtype.Get(), o.Subtype.IsSet()
}

// HasSubtype returns a boolean if a field has been set.
func (o *AccountResponse) HasSubtype() bool {
	if o != nil && o.Subtype.IsSet() {
		return true
	}

	return false
}

// SetSubtype gets a reference to the given NullableString and assigns it to the Subtype field.
func (o *AccountResponse) SetSubtype(v string) {
	o.Subtype.Set(&v)
}
// SetSubtypeNil sets the value for Subtype to be an explicit nil
func (o *AccountResponse) SetSubtypeNil() {
	o.Subtype.Set(nil)
}

// UnsetSubtype ensures that no value is present for Subtype, not even an explicit nil
func (o *AccountResponse) UnsetSubtype() {
	o.Subtype.Unset()
}

// GetTotalAccountValue returns the TotalAccountValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetTotalAccountValue() float32 {
	if o == nil || o.TotalAccountValue.Get() == nil {
		var ret float32
		return ret
	}
	return *o.TotalAccountValue.Get()
}

// GetTotalAccountValueOk returns a tuple with the TotalAccountValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetTotalAccountValueOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalAccountValue.Get(), o.TotalAccountValue.IsSet()
}

// HasTotalAccountValue returns a boolean if a field has been set.
func (o *AccountResponse) HasTotalAccountValue() bool {
	if o != nil && o.TotalAccountValue.IsSet() {
		return true
	}

	return false
}

// SetTotalAccountValue gets a reference to the given NullableFloat32 and assigns it to the TotalAccountValue field.
func (o *AccountResponse) SetTotalAccountValue(v float32) {
	o.TotalAccountValue.Set(&v)
}
// SetTotalAccountValueNil sets the value for TotalAccountValue to be an explicit nil
func (o *AccountResponse) SetTotalAccountValueNil() {
	o.TotalAccountValue.Set(nil)
}

// UnsetTotalAccountValue ensures that no value is present for TotalAccountValue, not even an explicit nil
func (o *AccountResponse) UnsetTotalAccountValue() {
	o.TotalAccountValue.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *AccountResponse) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *AccountResponse) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *AccountResponse) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *AccountResponse) UnsetType() {
	o.Type.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AccountResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *AccountResponse) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *AccountResponse) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *AccountResponse) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUserGuid returns the UserGuid field value if set, zero value otherwise.
func (o *AccountResponse) GetUserGuid() string {
	if o == nil || o.UserGuid == nil {
		var ret string
		return ret
	}
	return *o.UserGuid
}

// GetUserGuidOk returns a tuple with the UserGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetUserGuidOk() (*string, bool) {
	if o == nil || o.UserGuid == nil {
		return nil, false
	}
	return o.UserGuid, true
}

// HasUserGuid returns a boolean if a field has been set.
func (o *AccountResponse) HasUserGuid() bool {
	if o != nil && o.UserGuid != nil {
		return true
	}

	return false
}

// SetUserGuid gets a reference to the given string and assigns it to the UserGuid field.
func (o *AccountResponse) SetUserGuid(v string) {
	o.UserGuid = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountResponse) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountResponse) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *AccountResponse) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *AccountResponse) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *AccountResponse) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *AccountResponse) UnsetUserId() {
	o.UserId.Unset()
}

func (o AccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountNumber.IsSet() {
		toSerialize["account_number"] = o.AccountNumber.Get()
	}
	if o.Apr.IsSet() {
		toSerialize["apr"] = o.Apr.Get()
	}
	if o.Apy.IsSet() {
		toSerialize["apy"] = o.Apy.Get()
	}
	if o.AvailableBalance.IsSet() {
		toSerialize["available_balance"] = o.AvailableBalance.Get()
	}
	if o.AvailableCredit.IsSet() {
		toSerialize["available_credit"] = o.AvailableCredit.Get()
	}
	if o.Balance.IsSet() {
		toSerialize["balance"] = o.Balance.Get()
	}
	if o.CashBalance.IsSet() {
		toSerialize["cash_balance"] = o.CashBalance.Get()
	}
	if o.CashSurrenderValue.IsSet() {
		toSerialize["cash_surrender_value"] = o.CashSurrenderValue.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.CreditLimit.IsSet() {
		toSerialize["credit_limit"] = o.CreditLimit.Get()
	}
	if o.CurrencyCode.IsSet() {
		toSerialize["currency_code"] = o.CurrencyCode.Get()
	}
	if o.DayPaymentIsDue.IsSet() {
		toSerialize["day_payment_is_due"] = o.DayPaymentIsDue.Get()
	}
	if o.DeathBenefit.IsSet() {
		toSerialize["death_benefit"] = o.DeathBenefit.Get()
	}
	if o.Guid != nil {
		toSerialize["guid"] = o.Guid
	}
	if o.HoldingsValue.IsSet() {
		toSerialize["holdings_value"] = o.HoldingsValue.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.ImportedAt.IsSet() {
		toSerialize["imported_at"] = o.ImportedAt.Get()
	}
	if o.InstitutionCode.IsSet() {
		toSerialize["institution_code"] = o.InstitutionCode.Get()
	}
	if o.InsuredName.IsSet() {
		toSerialize["insured_name"] = o.InsuredName.Get()
	}
	if o.InterestRate.IsSet() {
		toSerialize["interest_rate"] = o.InterestRate.Get()
	}
	if o.IsClosed.IsSet() {
		toSerialize["is_closed"] = o.IsClosed.Get()
	}
	if o.IsHidden.IsSet() {
		toSerialize["is_hidden"] = o.IsHidden.Get()
	}
	if o.LastPayment.IsSet() {
		toSerialize["last_payment"] = o.LastPayment.Get()
	}
	if o.LastPaymentAt.IsSet() {
		toSerialize["last_payment_at"] = o.LastPaymentAt.Get()
	}
	if o.LoanAmount.IsSet() {
		toSerialize["loan_amount"] = o.LoanAmount.Get()
	}
	if o.MaturesOn.IsSet() {
		toSerialize["matures_on"] = o.MaturesOn.Get()
	}
	if o.MemberGuid != nil {
		toSerialize["member_guid"] = o.MemberGuid
	}
	if o.MemberId.IsSet() {
		toSerialize["member_id"] = o.MemberId.Get()
	}
	if o.MemberIsManagedByUser.IsSet() {
		toSerialize["member_is_managed_by_user"] = o.MemberIsManagedByUser.Get()
	}
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	if o.MinimumBalance.IsSet() {
		toSerialize["minimum_balance"] = o.MinimumBalance.Get()
	}
	if o.MinimumPayment.IsSet() {
		toSerialize["minimum_payment"] = o.MinimumPayment.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Nickname.IsSet() {
		toSerialize["nickname"] = o.Nickname.Get()
	}
	if o.OriginalBalance.IsSet() {
		toSerialize["original_balance"] = o.OriginalBalance.Get()
	}
	if o.PayOutAmount.IsSet() {
		toSerialize["pay_out_amount"] = o.PayOutAmount.Get()
	}
	if o.PaymentDueAt.IsSet() {
		toSerialize["payment_due_at"] = o.PaymentDueAt.Get()
	}
	if o.PayoffBalance.IsSet() {
		toSerialize["payoff_balance"] = o.PayoffBalance.Get()
	}
	if o.PremiumAmount.IsSet() {
		toSerialize["premium_amount"] = o.PremiumAmount.Get()
	}
	if o.RoutingNumber.IsSet() {
		toSerialize["routing_number"] = o.RoutingNumber.Get()
	}
	if o.StartedOn.IsSet() {
		toSerialize["started_on"] = o.StartedOn.Get()
	}
	if o.Subtype.IsSet() {
		toSerialize["subtype"] = o.Subtype.Get()
	}
	if o.TotalAccountValue.IsSet() {
		toSerialize["total_account_value"] = o.TotalAccountValue.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.UserGuid != nil {
		toSerialize["user_guid"] = o.UserGuid
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAccountResponse struct {
	value *AccountResponse
	isSet bool
}

func (v NullableAccountResponse) Get() *AccountResponse {
	return v.value
}

func (v *NullableAccountResponse) Set(val *AccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountResponse(val *AccountResponse) *NullableAccountResponse {
	return &NullableAccountResponse{value: val, isSet: true}
}

func (v NullableAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


