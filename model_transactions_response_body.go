/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// TransactionsResponseBody struct for TransactionsResponseBody
type TransactionsResponseBody struct {
	Pagination *PaginationResponse `json:"pagination,omitempty"`
	Transactions *[]TransactionResponse `json:"transactions,omitempty"`
}

// NewTransactionsResponseBody instantiates a new TransactionsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionsResponseBody() *TransactionsResponseBody {
	this := TransactionsResponseBody{}
	return &this
}

// NewTransactionsResponseBodyWithDefaults instantiates a new TransactionsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionsResponseBodyWithDefaults() *TransactionsResponseBody {
	this := TransactionsResponseBody{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *TransactionsResponseBody) GetPagination() PaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsResponseBody) GetPaginationOk() (*PaginationResponse, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *TransactionsResponseBody) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationResponse and assigns it to the Pagination field.
func (o *TransactionsResponseBody) SetPagination(v PaginationResponse) {
	o.Pagination = &v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *TransactionsResponseBody) GetTransactions() []TransactionResponse {
	if o == nil || o.Transactions == nil {
		var ret []TransactionResponse
		return ret
	}
	return *o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsResponseBody) GetTransactionsOk() (*[]TransactionResponse, bool) {
	if o == nil || o.Transactions == nil {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *TransactionsResponseBody) HasTransactions() bool {
	if o != nil && o.Transactions != nil {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []TransactionResponse and assigns it to the Transactions field.
func (o *TransactionsResponseBody) SetTransactions(v []TransactionResponse) {
	o.Transactions = &v
}

func (o TransactionsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	if o.Transactions != nil {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionsResponseBody struct {
	value *TransactionsResponseBody
	isSet bool
}

func (v NullableTransactionsResponseBody) Get() *TransactionsResponseBody {
	return v.value
}

func (v *NullableTransactionsResponseBody) Set(val *TransactionsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionsResponseBody(val *TransactionsResponseBody) *NullableTransactionsResponseBody {
	return &NullableTransactionsResponseBody{value: val, isSet: true}
}

func (v NullableTransactionsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


